repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name "Cyclops Repo"
        url "https://dl.bintray.com/cyclopsmc/dev/"
    }
}

dependencies {
    // Add something like 'cyclopscore_version_local=0.1.0-DEV' to your gradle.properties if you want to use a custom local CyclopsCore version.
    if(project.hasProperty("cyclopscore_version_local")) {
        compile "org.cyclops.cyclopscore:CyclopsCore:${config.minecraft_version}-${project.cyclopscore_version_local}:deobf"
    } else {
        compile "org.cyclops.cyclopscore:CyclopsCore:${config.minecraft_version}-${config.cyclopscore_version}:deobf"
    }
    // Add something like 'integrateddynamicscompat_version_local=0.1.0-DEV' to your gradle.properties if you want to use a custom local Integrated Dynamics Compat version.
    if(project.hasProperty("integrateddynamicscompat_version_local")) {
        shadow("org.cyclops.integrateddynamicscompat:IntegratedDynamicsCompat:${project.integrateddynamicscompat_version_local}") {
            exclude group: 'org.cyclops.cyclopscore', module: 'CyclopsCore'
            exclude group: 'org.cyclops.integrateddynamics', module: 'IntegratedDynamics'
        }
    } else {
        shadow("org.cyclops.integrateddynamicscompat:IntegratedDynamicsCompat:${config.integrateddynamicscompat_version}") {
            exclude group: 'org.cyclops.cyclopscore', module: 'CyclopsCore'
            exclude group: 'org.cyclops.integrateddynamics', module: 'IntegratedDynamics'
        }
    }

    deobfCompile("org.cyclops.commoncapabilities:CommonCapabilities:${config.commoncapabilities_version}") { // https://dl.bintray.com/cyclopsmc/dev/org/cyclops/commoncapabilities/CommonCapabilities/
        exclude group: 'org.cyclops.cyclopscore', module: 'CyclopsCore'
    }

    // Project lombok
    provided "org.projectlombok:lombok:1.16.8"
    testCompile "junit:junit:4.12"
}

shadowJar {
    dependencies {
        exclude(dependency {
            it.moduleGroup == 'org.projectlombok'
        })
    }
}

minecraft {
    version = "${config.minecraft_version}-${config.forge_version}"
    runDir = "run"
    
    replaceIn "Reference.java"
    replaceIn "APIReference.java"
    replace "@VERSION@", project.version
    replace "@API_VERSION@", project.config.api_version
    replace "@MC_VERSION@", project.config.minecraft_version
    replace "@FORGE_VERSION@", project.config.forge_version
    replace "@BUILD_NUMBER@", project.buildnumber
    replace "@CYCLOPSCORE_VERSION@", project.config.cyclopscore_version

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "${config.mcp_mappings_version}"
}

if (project.buildnumber.equals("RELEASE"))
    version = "${config.minecraft_version}-${config.mod_version}"
else
    version = "${config.minecraft_version}-${config.mod_version}-${buildnumber}"

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, that is not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
