# General
itemGroup.integrateddynamics=Integrated Dynamics
general.integrateddynamics.description=Take full and automated control of your appliances.
general.integrateddynamics.info.none=None
general.integrateddynamics.energy_unit.name=RF
general.integrateddynamics.error.no_network=No valid network found
general.integrateddynamics.true=True
general.integrateddynamics.false=False

# Gui
gui.integrateddynamics.keybinding=Key Binding
gui.integrateddynamics.button.save=Save
gui.integrateddynamics.button.rename=Rename
gui.integrateddynamics.button.copy=Copy
gui.integrateddynamics.button.copy.info=Copy to clipboard
gui.integrateddynamics.partsettings.update_interval=Ticks/Operation
gui.integrateddynamics.partsettings.priority=Priority
gui.integrateddynamics.partsettings.channel=Energy Channel
gui.integrateddynamics.partsettings.channel.disabledinfo=Network energy consumption is disabled on this server.
gui.integrateddynamics.partsettings.side=Target Side
gui.integrateddynamics.delay.capacity=Capacity
gui.integrateddynamics.part.properties=Properties:
gui.integrateddynamics.logicprogrammer.filter=Filter
gui.integrateddynamics.waila.part_config=Part Information
gui.integrateddynamics.waila.proxy_config=Proxy Information
gui.integrateddynamics.waila.drying_basin_config=Drying Basin Information
gui.integrateddynamics.waila.item=Item: %s
gui.integrateddynamics.waila.fluid=Fluid: %s (%s mB)
gui.integrateddynamics.rewards=Rewards
gui.integrateddynamics.rewards.collect=Collect
gui.integrateddynamics.rewards.collected=Collected
gui.integrateddynamics.rewards.collectFailure=Can't collect rewards, is your inventory full?
gui.integrateddynamics.input=Input: %s
gui.integrateddynamics.output=Output: %s
gui.integrateddynamics.mechanical_squeezer.togglefluidautoeject=Auto-eject Fluid: %s
gui.integrateddynamics.mechanical_squeezer.togglefluidautoeject.info=Push to adjacent tanks.
gui.integrateddynamics.input_short=Input
gui.integrateddynamics.output_short=Output

# Diagnostics
gui.integrateddynamics.diagnostics.parts=Parts
gui.integrateddynamics.diagnostics.observers=Storage Observers
gui.integrateddynamics.diagnostics.title=Network Diagnostics
gui.integrateddynamics.diagnostics.table.network=Network
gui.integrateddynamics.diagnostics.table.cables=Cables
gui.integrateddynamics.diagnostics.table.part=Part
gui.integrateddynamics.diagnostics.table.ticktime=Ticktime (ms)
gui.integrateddynamics.diagnostics.table.dimension=Dim
gui.integrateddynamics.diagnostics.table.position=Position
gui.integrateddynamics.diagnostics.table.side=side

# Keybindings
key.categories.integrateddynamics=Integrated Dynamics
key.integrateddynamics.logic_programmer_focus_search=Focus Search Logic Programmer
key.integrateddynamics.logic_programmer_open_rename=Rename Variable Logic Programmer

# Sound names
subtitles.integrateddynamics.effect.page.flipsingle=Flip Page
subtitles.integrateddynamics.effect.page.flipmultiple=Flip Pages

# Blocks
tile.blocks.integrateddynamics.cable.name=Logic Cable
tile.blocks.integrateddynamics.variablestore.name=Variable Store
tile.blocks.integrateddynamics.energy_battery.name=Energy Battery
tile.blocks.integrateddynamics.energy_battery.info=Place in crafting grid with other Energy Batteries to increase capacity. Shift + Right click to auto-supply.
tile.blocks.integrateddynamics.energy_battery.info.auto_supply=Auto-supply: %s
tile.blocks.integrateddynamics.creative_energy_battery.name=Creative Energy Battery
tile.blocks.integrateddynamics.logic_programmer.name=Logic Programmer
tile.blocks.integrateddynamics.coal_generator.name=Generator
tile.blocks.integrateddynamics.coal_generator.info=Produces energy from fuel items
tile.blocks.integrateddynamics.proxy.name=Proxy
tile.blocks.integrateddynamics.proxy.info=Expose a variable reference as an aspect. Clear in a crafting grid.
tile.blocks.integrateddynamics.materializer.name=Materializer
tile.blocks.integrateddynamics.materializer.info=Materialize the value of a variable in a new variable
tile.blocks.integrateddynamics.menril_log.name=Menril Wood
tile.blocks.integrateddynamics.menril_log_filled.name=Enriched Menril Wood
tile.blocks.integrateddynamics.menril_leaves.name=Menril Leaves
tile.blocks.integrateddynamics.menril_sapling.name=Menril Sapling
tile.blocks.integrateddynamics.menril_planks.name=Menril Wood Planks
tile.blocks.integrateddynamics.crystalized_menril_block.name=Block of Crystalized Menril
tile.blocks.integrateddynamics.crystalized_menril_brick.name=Crystalized Menril Brick
tile.blocks.integrateddynamics.block_menril_resin.name=Menril Resin
tile.blocks.integrateddynamics.drying_basin.name=Drying Basin
tile.blocks.integrateddynamics.drying_basin.info=For drying items and fluids
tile.blocks.integrateddynamics.squeezer.name=Squeezer
tile.blocks.integrateddynamics.squeezer.info=Squeezes, flattens and crushes by jumping on it. Redstone pulse to reset.
tile.blocks.integrateddynamics.menril_torch.name=Menril Torch
tile.blocks.integrateddynamics.menril_torch_stone.name=Menril Stone Torch
tile.blocks.integrateddynamics.invisible_light.name=Invisible Light
tile.blocks.integrateddynamics.menril_door.name=Menril Door
tile.blocks.integrateddynamics.menril_planks_stairs.name=Menril Wood Stairs
tile.blocks.integrateddynamics.crystalized_menril_block_stairs.name=Crystalized Menril Stairs
tile.blocks.integrateddynamics.crystalized_menril_brick_stairs.name=Crystalized Menril Brick Stairs
tile.blocks.integrateddynamics.delay.name=Delayer
tile.blocks.integrateddynamics.delay.info=Expose the history of a variable as an aspect. Clear in a crafting grid.
tile.blocks.integrateddynamics.block_liquid_chorus.name=Liquid Chorus
tile.blocks.integrateddynamics.crystalized_chorus_block.name=Block of Crystalized Chorus
tile.blocks.integrateddynamics.crystalized_chorus_brick.name=Crystalized Chorus Brick
tile.blocks.integrateddynamics.crystalized_chorus_block_stairs.name=Crystalized Chorus Stairs
tile.blocks.integrateddynamics.crystalized_chorus_brick_stairs.name=Crystalized Chorus Brick Stairs
tile.blocks.integrateddynamics.mechanical_squeezer.name=Mechanical Squeezer
tile.blocks.integrateddynamics.mechanical_squeezer.info=Squeezes, flattens and crushes using energy.
tile.blocks.integrateddynamics.mechanical_drying_basin.name=Mechanical Drying Basin
tile.blocks.integrateddynamics.mechanical_drying_basin.info=For drying items and fluids using energy.

# Items
item.items.integrateddynamics.general.id=§e§lID: §r%s
item.items.integrateddynamics.wrench.name=Wrench
item.items.integrateddynamics.variable.name=Variable Card
item.items.integrateddynamics.variable.info=Clear or copy in a crafting grid
item.items.integrateddynamics.variable.warning=§4§lWARNING: Do NOT copy this item by middle-clicking!
item.items.integrateddynamics.variable.id=§e§oVariable ID: §r§o%s
item.items.integrateddynamics.labeller.name=Labeller
item.items.integrateddynamics.labeller.info=Labels your variables. Also works in the Logic Programmer.
item.items.integrateddynamics.labeller.button.write=Write
item.items.integrateddynamics.facade.name=Facade
item.items.integrateddynamics.facade.info=Combine with a block in crafting table
item.items.integrateddynamics.bucket_menril_resin.name=Menril Resin Bucket
item.items.integrateddynamics.crystalized_menril_chunk.name=Crystalized Menril Chunk
item.items.integrateddynamics.variable_transformer.name=Input/Output Variable Transformers
item.items.integrateddynamics.variable_transformer.output.name=Output Variable Transformer
item.items.integrateddynamics.variable_transformer.input.name=Input Variable Transformer
item.items.integrateddynamics.menril_berries.name=Menril Berries
item.items.integrateddynamics.menril_berries.info=Tasty and illuminating
item.items.integrateddynamics.portable_logic_programmer.name=Portable Logic Programmer
item.items.integrateddynamics.on_the_dynamics_of_integration.name=On the Dynamics of Integration
item.items.integrateddynamics.on_the_dynamics_of_integration.info=A complete mod reference guide with tutorials
item.items.integrateddynamics.crystalized_chorus_chunk.name=Crystalized Chorus Chunk
item.items.integrateddynamics.logic_director.name=Logic Director

# Fluids
fluid.fluids.integrateddynamics.menrilresin=Menril Resin
fluid.fluids.integrateddynamics.liquidchorus=Liquid Chorus

# Biomes
biomes.integrateddynamics.biome_meneglin=Meneglin

# Advancements
advancement.integrateddynamics.meneglin_discovery=Meneglin Discovery
advancement.integrateddynamics.meneglin_discovery.desc=Chop down a Menril tree, which can most easily be found in Meneglin biomes.
advancement.integrateddynamics.squeezing=Squeezing like a boss
advancement.integrateddynamics.squeezing.desc=Craft a Squeezer.
advancement.integrateddynamics.drying=Drying like a boss
advancement.integrateddynamics.drying.desc=Craft a Drying Basin.
advancement.integrateddynamics.menril_production=Menril Production
advancement.integrateddynamics.menril_production.desc=Process Menril Wood into Menril Resin and dry it to obtain Crystalized Menril Resin.
advancement.integrateddynamics.cables_logic=Cables, for logic
advancement.integrateddynamics.cables_logic.desc=Craft a Logic Cable
advancement.integrateddynamics.networks_logic=Networks, for logic
advancement.integrateddynamics.networks_logic.desc=Build a logic network with at least 10 connected Logic Cables.
advancement.integrateddynamics.menril_wrenching=Menril Wrenching
advancement.integrateddynamics.menril_wrenching.desc=Craft a Wrench
advancement.integrateddynamics.variables=Variables, For Values
advancement.integrateddynamics.variables.desc=Craft a Variable Card
advancement.integrateddynamics.variable_input=Variable Input Transformation
advancement.integrateddynamics.variable_input.desc=Craft an Variable Input Transformer
advancement.integrateddynamics.variable_output=Variable Output Transformation
advancement.integrateddynamics.variable_output.desc=Craft Variable Output Transformer
advancement.integrateddynamics.redstone_reading=Redstone Reading
advancement.integrateddynamics.redstone_reading.desc=Craft a Redstone Reader
advancement.integrateddynamics.block_reading=Block Reading
advancement.integrateddynamics.block_reading.desc=Craft a Block Reader
advancement.integrateddynamics.inventory_reading=Inventory Reading
advancement.integrateddynamics.inventory_reading.desc=Craft an Inventory Reader
advancement.integrateddynamics.machine_reading=Machine Reading
advancement.integrateddynamics.machine_reading.desc=Craft a Machine Reader
advancement.integrateddynamics.value_displaying=Value Displaying
advancement.integrateddynamics.value_displaying.desc=Craft a Display Panel
advancement.integrateddynamics.redstone_capturing=Redstone Capturing
advancement.integrateddynamics.redstone_capturing.desc=Make a variable card for a redstone §6Integer§7 value.
advancement.integrateddynamics.redstone_observement=Redstone Observement
advancement.integrateddynamics.redstone_observement.desc=Place an §6Integer§7 variable card in a Display Panel.
advancement.integrateddynamics.redstone_transmission=Redstone Transmission
advancement.integrateddynamics.redstone_transmission.desc=Let a Redstone Writer write a maximal integer redstone level that was read by a Redstone Reader.
advancement.integrateddynamics.recipe_reading=Recipe Reading
advancement.integrateddynamics.recipe_reading.desc=Read the list of recipes from a machine (like the Crafting Table) using a Machine Reader.
advancement.integrateddynamics.recipe_creation=Recipe Creation
advancement.integrateddynamics.recipe_creation.desc=Visually create a §8Recipe§7 using the Logic Programmer.
advancement.integrateddynamics.recipe_lookup=Recipe Lookup
advancement.integrateddynamics.recipe_lookup.desc=Dynamically lookup the recipe of a Chest using a Machine Reader.
advancement.integrateddynamics.logic_programming=Logic Programming
advancement.integrateddynamics.logic_programming.desc=Open a Logic Programmer's GUI
advancement.integrateddynamics.constant_definition=Constant Definition
advancement.integrateddynamics.constant_definition.desc=Define a constant §6Integer§7 Variable Card.
advancement.integrateddynamics.arithmetic_addition=Arithmetic Addition
advancement.integrateddynamics.arithmetic_addition.desc=Add two §eNumbers§7 and display the result.
advancement.integrateddynamics.variable_materialization=Variable Materialization
advancement.integrateddynamics.variable_materialization.desc=Materialize a variable in a §lMaterializer§r.
advancement.integrateddynamics.variable_proxying=Variable Proxying
advancement.integrateddynamics.variable_proxying.desc=Create a valid proxy variable in a §lProxy§r.
advancement.integrateddynamics.logical_list_building=Logical List Building
advancement.integrateddynamics.logical_list_building.desc=Construct a static List with §6Integers§7 1, 10 and 100.
advancement.integrateddynamics.item_origin_identification=Item Origin Identification
advancement.integrateddynamics.item_origin_identification.desc=Get the mod name of an Item.
advancement.integrateddynamics.what_would_i_be_looking_at=What Would I Be Looking At?
advancement.integrateddynamics.what_would_i_be_looking_at.desc=Get the Block you are looking at.
advancement.integrateddynamics.dynamic_additions=Dynamic Additions
advancement.integrateddynamics.dynamic_additions.desc=Invoke the addition Operator dynamically
advancement.integrateddynamics.dynamic_list_filtering=Dynamic List Filtering
advancement.integrateddynamics.dynamic_list_filtering.desc=Filter an Integer list 1, 10 and 100 to 10.
advancement.integrateddynamics.creeper_taming=Creeper Taming
advancement.integrateddynamics.creeper_taming.desc=Show the HP of a Creeper in a Display Panel
advancement.integrateddynamics.sponge_step_sound=Sponge Step Sound
advancement.integrateddynamics.sponge_step_sound.desc=Play the step sound of a wet Sponge block
advancement.integrateddynamics.recursive_recursion=Recursive Recursion
advancement.integrateddynamics.recursive_recursion.desc=Create an infinite List, and display it in a Display Panel
advancement.integrateddynamics.tool_for_obsidian=Tools for Obsidian?
advancement.integrateddynamics.tool_for_obsidian.desc=Check if a Stone Pickaxe can break an Obsidian block, and show the result in a Display Panel.
advancement.integrateddynamics.smart_pressure_plate=Smart Pressure Plate
advancement.integrateddynamics.smart_pressure_plate.desc=Create a system that automatically opens a door when you pass by an Entity Reader based on entity name matching, using a Redstone Writer directly pointing to the door. (Hint: pass an entity name as first argument into the equals operator)

# Value types
valuetype.integrateddynamics.error.value=Invalid value
valuetype.integrateddynamics.value_type=Value Type
valuetype.integrateddynamics.tooltip.type_name=§eType: §r%s
valuetype.integrateddynamics.tooltip.value=§e§oValue: §r%s
valuetype.integrateddynamics.operator.tooltip.signature=§eSignature: §r%s
valuetype.integrateddynamics.error.invalid_input=The input "%s" could not be parsed for this value type.
valuetype.integrateddynamics.error.invalid_input_item=This value type requires an input item.
valuetype.integrateddynamics.error.invalid_list_element=Element %s is invalid: %s
valuetype.integrateddynamics.error.invalid_list_value_type=The list expects value type %s while %s was given.
valuetype.integrateddynamics.error.invalid_operator_operator=An operator value type was expected at position %s, while %s was given
valuetype.integrateddynamics.error.invalid_operator_signature=The operator value %s expected value types (%s), while (%s) was given.
valuetype.integrateddynamics.error.block.no_block=The inserted item is no block.
valuetype.integrateddynamics.error.fluid.no_fluid=The inserted item contains no fluid.

valuetype.valuetypes.integrateddynamics.any.name=Any
valuetype.valuetypes.integrateddynamics.any.info=Accepts any type of value.
valuetype.valuetypes.integrateddynamics.number.name=Number
valuetype.valuetypes.integrateddynamics.number.info=Accepts all number types.
valuetype.valuetypes.integrateddynamics.named.name=Named
valuetype.valuetypes.integrateddynamics.named.info=Something that has a name, such as display names of items and blocks.
valuetype.valuetypes.integrateddynamics.uniquely_named.name=Uniquely Named
valuetype.valuetypes.integrateddynamics.uniquely_named.info=Something that has a unique name, such as items and blocks.

valuetype.valuetypes.integrateddynamics.boolean.name=Boolean
valuetype.valuetypes.integrateddynamics.integer.name=Integer
valuetype.valuetypes.integrateddynamics.double.name=Double
valuetype.valuetypes.integrateddynamics.long.name=Long
valuetype.valuetypes.integrateddynamics.string.name=String
valuetype.valuetypes.integrateddynamics.operator.name=Operator
valuetype.valuetypes.integrateddynamics.nbt.name=NBT

valuetype.valuetypes.integrateddynamics.list.name=List
valuetype.valuetypes.integrateddynamics.block.name=Block
valuetype.valuetypes.integrateddynamics.itemstack.name=Item
valuetype.valuetypes.integrateddynamics.entity.name=Entity
valuetype.valuetypes.integrateddynamics.fluidstack.name=Fluid
valuetype.valuetypes.integrateddynamics.ingredients.name=Ingredients
valuetype.valuetypes.integrateddynamics.recipe.name=Recipe

valuetype.valuetypes.integrateddynamics.ingredients.info=Shift click to change.
valuetype.valuetypes.integrateddynamics.ingredients.match.itemmeta=Item Meta
valuetype.valuetypes.integrateddynamics.ingredients.match.itemmeta.desc=§cMatch by §nitem type§r§c and §nmeta value§r.
valuetype.valuetypes.integrateddynamics.ingredients.match.item=Item
valuetype.valuetypes.integrateddynamics.ingredients.match.item.desc=§cMatch by §nitem type§r§c.
valuetype.valuetypes.integrateddynamics.ingredients.match.itemmetanbt=Item Meta NBT
valuetype.valuetypes.integrateddynamics.ingredients.match.itemmetanbt.desc=§cMatch by §nitem type§r§c, §nmeta value§r§c and §nNBT§r§c.
valuetype.valuetypes.integrateddynamics.ingredients.match.itemnbt=Item NBT
valuetype.valuetypes.integrateddynamics.ingredients.match.itemnbt.desc=§cMatch by §nitem type§r§c and §nNBT§r§c.
valuetype.valuetypes.integrateddynamics.ingredients.match.oredict=Oredictionary
valuetype.valuetypes.integrateddynamics.ingredients.match.oredict.desc=§cMatch by equivalent §nOredictionary§r§c entries.

# Part types
parttype.parttypes.integrateddynamics.error.low_energy=Not enough energy
parttype.parttypes.integrateddynamics.tooltip.disabled=Out of Energy
parttype.parttypes.integrateddynamics.tooltip.inactive=Inactive
parttype.parttypes.integrateddynamics.tooltip.errors=Errors:
parttype.parttypes.integrateddynamics.tooltip.writer.active_aspect=Aspect: %s (%s)
parttype.parttypes.integrateddynamics.tooltip.display.active_value=Value: %s (%s)
parttype.parttypes.integrateddynamics.tooltip.monodirectionalconnector.group=Group: %s
parttype.parttypes.integrateddynamics.tooltip.noaspects=WARNING: No aspects available. This may become usable when other mods are installed.

parttype.parttypes.integrateddynamics.audio_reader.name=Audio Reader
parttype.parttypes.integrateddynamics.audio_reader.info=Reads audio information
parttype.parttypes.integrateddynamics.block_reader.name=Block Reader
parttype.parttypes.integrateddynamics.block_reader.info=Reads block information
parttype.parttypes.integrateddynamics.entity_reader.name=Entity Reader
parttype.parttypes.integrateddynamics.entity_reader.info=Reads entity information
parttype.parttypes.integrateddynamics.extradimensional_reader.name=Extra-Dimensional Reader
parttype.parttypes.integrateddynamics.extradimensional_reader.info=Reads information that is shared for all dimensions
parttype.parttypes.integrateddynamics.fluid_reader.name=Fluid Reader
parttype.parttypes.integrateddynamics.fluid_reader.info=Reads fluid tanks
parttype.parttypes.integrateddynamics.inventory_reader.name=Inventory Reader
parttype.parttypes.integrateddynamics.inventory_reader.info=Reads data from inventories
parttype.parttypes.integrateddynamics.network_reader.name=Network Reader
parttype.parttypes.integrateddynamics.network_reader.info=Reads target network properties
parttype.parttypes.integrateddynamics.machine_reader.name=Machine Reader
parttype.parttypes.integrateddynamics.machine_reader.info=Reads machine properties
parttype.parttypes.integrateddynamics.redstone_reader.name=Redstone Reader
parttype.parttypes.integrateddynamics.redstone_reader.info=Reads redstone values
parttype.parttypes.integrateddynamics.world_reader.name=World Reader
parttype.parttypes.integrateddynamics.world_reader.info=Reads things related to the world, blocks and entities

parttype.parttypes.integrateddynamics.audio_writer.name=Audio Writer
parttype.parttypes.integrateddynamics.audio_writer.info=Outputs audio and music
parttype.parttypes.integrateddynamics.effect_writer.name=Effect Writer
parttype.parttypes.integrateddynamics.effect_writer.info=Outputs particles
parttype.parttypes.integrateddynamics.entity_writer.name=Entity Writer
parttype.parttypes.integrateddynamics.entity_writer.info=Writes entity configuration
parttype.parttypes.integrateddynamics.machine_writer.name=Machine Writer
parttype.parttypes.integrateddynamics.machine_writer.info=Writes machine configuration
parttype.parttypes.integrateddynamics.inventory_writer.name=Inventory Writer
parttype.parttypes.integrateddynamics.inventory_writer.info=Writes to inventories
parttype.parttypes.integrateddynamics.redstone_writer.name=Redstone Writer
parttype.parttypes.integrateddynamics.redstone_writer.info=Writes to redstone

parttype.parttypes.integrateddynamics.data_driven_panel.error.invalid_type=This panel does not accept a %s.
parttype.parttypes.integrateddynamics.static_light_panel.name=Static Light Panel
parttype.parttypes.integrateddynamics.static_light_panel.info=A simply light panel that is always active
parttype.parttypes.integrateddynamics.dynamic_light_panel.name=Dynamic Light Panel
parttype.parttypes.integrateddynamics.dynamic_light_panel.info=Visually display a variable value in the world as light value
parttype.parttypes.integrateddynamics.display_panel.name=Display Panel
parttype.parttypes.integrateddynamics.display_panel.info=Visually display a variable value in the world as text

parttype.parttypes.integrateddynamics.connector_mono_directional.name=Mono-Directional Connector
parttype.parttypes.integrateddynamics.connector_mono_directional.info=Can connect to other Mono-Directional Connectors over a distance in a straight line
parttype.parttypes.integrateddynamics.connector_omni_directional.name=Omni-Directional Connector
parttype.parttypes.integrateddynamics.connector_omni_directional.info=Can connect to other Omni-Directional Connectors anywhere, including different dimensions.

# Variables facades
variable.integrateddynamics.error.invalid_item=The current variable can not be used in this aspect.
variable.integrateddynamics.error.part_not_in_network=Part with id %s could not be found within the current network.
variable.integrateddynamics.error.recursion=The variable with id %s is referring to itself.

# Proxy
proxy.integrateddynamics.tooltip.proxy_id=§e§oProxy ID: §r§o%s
proxy.integrateddynamics.error.proxy_not_in_network=Proxy with id %s could not be found within the current network.
proxy.integrateddynamics.error.proxy_invalid=Proxy with id %s is not exposing a variable.
proxy.integrateddynamics.error.proxy_invalid_type=Proxy with id %s is expected to expose a variable with type %s while %s is found.

# Delay
delay.integrateddynamics.tooltip.delay_id=§e§oDelay ID: §r§o%s
delay.integrateddynamics.error.delay_not_in_network=Delay with id %s could not be found within the current network.
delay.integrateddynamics.error.delay_invalid=Delay with id %s is not exposing a variable.
delay.integrateddynamics.error.delay_invalid_type=Delay with id %s is expected to expose a variable with type %s while %s is found.

# Aspects
aspect.integrateddynamics.tooltip.aspect_name=§eAspect: §r%s
aspect.integrateddynamics.tooltip.value_type_name=§eType: §r%s
aspect.integrateddynamics.tooltip.part_id=§e§oPart ID: §r§o%s
aspect.integrateddynamics.error.invalid_type=This aspect expects %s, but %s was given.
aspect.aspects.integrateddynamics.name=Aspect

## Audio aspects
aspect.aspects.integrateddynamics.read.integer.audio.instrument.piano.name=Piano Note
aspect.aspects.integrateddynamics.read.integer.audio.instrument.piano.info=Reads a piano note, expected range [0, 24]
aspect.aspects.integrateddynamics.read.integer.audio.instrument.bassdrum.name=Bass Drum Note
aspect.aspects.integrateddynamics.read.integer.audio.instrument.bassdrum.info=Reads a bass drum note, expected range [0, 24]
aspect.aspects.integrateddynamics.read.integer.audio.instrument.snare.name=Snare Note
aspect.aspects.integrateddynamics.read.integer.audio.instrument.snare.info=Reads a snare note, expected range [0, 24]
aspect.aspects.integrateddynamics.read.integer.audio.instrument.clicks.name=Clicks Note
aspect.aspects.integrateddynamics.read.integer.audio.instrument.clicks.info=Reads a clicks note, expected range [0, 24]
aspect.aspects.integrateddynamics.read.integer.audio.instrument.bassguitar.name=Bass Guitar Note
aspect.aspects.integrateddynamics.read.integer.audio.instrument.bassguitar.info=Reads a bass guitar note, expected range [0, 24]

aspect.aspects.integrateddynamics.write.integer.audio.instrument.piano.name=Piano Note
aspect.aspects.integrateddynamics.write.integer.audio.instrument.piano.info=Output a piano note, expected range [0, 24]
aspect.aspects.integrateddynamics.write.integer.audio.instrument.bassdrum.name=Bass Drum Note
aspect.aspects.integrateddynamics.write.integer.audio.instrument.bassdrum.info=Output a bass drum note, expected range [0, 24]
aspect.aspects.integrateddynamics.write.integer.audio.instrument.snare.name=Snare Note
aspect.aspects.integrateddynamics.write.integer.audio.instrument.snare.info=Output a snare note, expected range [0, 24]
aspect.aspects.integrateddynamics.write.integer.audio.instrument.clicks.name=Clicks Note
aspect.aspects.integrateddynamics.write.integer.audio.instrument.clicks.info=Output a clicks note, expected range [0, 24]
aspect.aspects.integrateddynamics.write.integer.audio.instrument.bassguitar.name=Bass Guitar Note
aspect.aspects.integrateddynamics.write.integer.audio.instrument.bassguitar.info=Output a bass guitar note, expected range [0, 24]

aspect.aspects.integrateddynamics.write.string.audio.sound.name=Sound
aspect.aspects.integrateddynamics.write.string.audio.sound.info=Play the given sound name
aspect.aspects.integrateddynamics.write.string.audio.text.name=Text
aspect.aspects.integrateddynamics.write.string.audio.text.info=Convert the given text to speech

## Effect aspects
aspect.aspects.integrateddynamics.write.double.effect.particle.fireworksspark.name=Particle: Fireworks Spark
aspect.aspects.integrateddynamics.write.double.effect.particle.fireworksspark.info=Emit a fireworks spark particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.bubble.name=Particle: Bubble
aspect.aspects.integrateddynamics.write.double.effect.particle.bubble.info=Emit a bubble particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.splash.name=Particle: Water Splash
aspect.aspects.integrateddynamics.write.double.effect.particle.splash.info=Emit a water splash particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.wake.name=Particle: Water Wake
aspect.aspects.integrateddynamics.write.double.effect.particle.wake.info=Emit a water wake particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.suspended.name=Particle: Suspend
aspect.aspects.integrateddynamics.write.double.effect.particle.suspended.info=Emit a suspend particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.depthsuspend.name=Particle: Suspend Depth
aspect.aspects.integrateddynamics.write.double.effect.particle.depthsuspend.info=Emit a depth suspend particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.crit.name=Particle: Critical
aspect.aspects.integrateddynamics.write.double.effect.particle.crit.info=Emit a critical particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.magiccrit.name=Particle: Critical Magic
aspect.aspects.integrateddynamics.write.double.effect.particle.magiccrit.info=Emit a critical magic particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.smoke.name=Particle: Smoke
aspect.aspects.integrateddynamics.write.double.effect.particle.smoke.info=Emit a smoke particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.largesmoke.name=Particle: Large Smoke
aspect.aspects.integrateddynamics.write.double.effect.particle.largesmoke.info=Emit a large smoke particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.spell.name=Particle: Spell
aspect.aspects.integrateddynamics.write.double.effect.particle.spell.info=Emit a spell particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.instantspell.name=Particle: Instant Spell
aspect.aspects.integrateddynamics.write.double.effect.particle.instantspell.info=Emit an instant spell particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.mobspell.name=Particle: Mob Spell
aspect.aspects.integrateddynamics.write.double.effect.particle.mobspell.info=Emit a mob spell particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.mobspellambient.name=Particle: Ambient Mob Spell
aspect.aspects.integrateddynamics.write.double.effect.particle.mobspellambient.info=Emit an ambient mob spell particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.witchmagic.name=Particle: Witch Magic
aspect.aspects.integrateddynamics.write.double.effect.particle.witchmagic.info=Emit a witch magic particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.dripwater.name=Particle: Drip Water
aspect.aspects.integrateddynamics.write.double.effect.particle.dripwater.info=Emit a water drip particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.driplava.name=Particle: Drip Lava
aspect.aspects.integrateddynamics.write.double.effect.particle.driplava.info=Emit a lava drip particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.angryvillager.name=Particle: Angry Villager
aspect.aspects.integrateddynamics.write.double.effect.particle.angryvillager.info=Emit an angry villager particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.happyvillager.name=Particle: Happy Villager
aspect.aspects.integrateddynamics.write.double.effect.particle.happyvillager.info=Emit a happy villager particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.townaura.name=Particle: Town Aura
aspect.aspects.integrateddynamics.write.double.effect.particle.townaura.info=Emit a town aura particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.note.name=Particle: Note
aspect.aspects.integrateddynamics.write.double.effect.particle.note.info=Emit a note particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.portal.name=Particle: Portal
aspect.aspects.integrateddynamics.write.double.effect.particle.portal.info=Emit a portal particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.enchantmenttable.name=Particle: Enchantment Table
aspect.aspects.integrateddynamics.write.double.effect.particle.enchantmenttable.info=Emit an enchantment table particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.flame.name=Particle: Flame
aspect.aspects.integrateddynamics.write.double.effect.particle.flame.info=Emit a bubble flame with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.lava.name=Particle: Lava
aspect.aspects.integrateddynamics.write.double.effect.particle.lava.info=Emit a lava particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.footstep.name=Particle: Footstep
aspect.aspects.integrateddynamics.write.double.effect.particle.footstep.info=Emit a footstep particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.cloud.name=Particle: Cloud
aspect.aspects.integrateddynamics.write.double.effect.particle.cloud.info=Emit a cloud particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.reddust.name=Particle: Redstone Dust
aspect.aspects.integrateddynamics.write.double.effect.particle.reddust.info=Emit a redstone dust particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.snowballpoof.name=Particle: Snowball
aspect.aspects.integrateddynamics.write.double.effect.particle.snowballpoof.info=Emit a snowball particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.snowshovel.name=Particle: Snow Shovel
aspect.aspects.integrateddynamics.write.double.effect.particle.snowshovel.info=Emit a snow shovel particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.slime.name=Particle: Slime
aspect.aspects.integrateddynamics.write.double.effect.particle.slime.info=Emit a slime particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.heart.name=Particle: Heart
aspect.aspects.integrateddynamics.write.double.effect.particle.heart.info=Emit a heart particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.barrier.name=Particle: Barrier
aspect.aspects.integrateddynamics.write.double.effect.particle.barrier.info=Emit a barrier particle with a certain velocity.
aspect.aspects.integrateddynamics.write.double.effect.particle.droplet.name=Particle: Water Drop
aspect.aspects.integrateddynamics.write.double.effect.particle.droplet.info=Emit a water drop particle with a certain velocity.

## Block aspects
aspect.aspects.integrateddynamics.read.boolean.block.block.name=Has Block
aspect.aspects.integrateddynamics.read.boolean.block.block.info=If the target space has a block

aspect.aspects.integrateddynamics.read.integer.block.dimension.name=Dimension
aspect.aspects.integrateddynamics.read.integer.block.dimension.info=The id of the target world dimension
aspect.aspects.integrateddynamics.read.integer.block.posx.name=X Coordinate
aspect.aspects.integrateddynamics.read.integer.block.posx.info=The X coordinate of the target
aspect.aspects.integrateddynamics.read.integer.block.posy.name=Y Coordinate
aspect.aspects.integrateddynamics.read.integer.block.posy.info=The Y coordinate of the target
aspect.aspects.integrateddynamics.read.integer.block.posz.name=Z Coordinate
aspect.aspects.integrateddynamics.read.integer.block.posz.info=The Z coordinate of the target
aspect.aspects.integrateddynamics.read.nbt.block.tile.name=Tile Entity NBT
aspect.aspects.integrateddynamics.read.nbt.block.tile.info=The target Tile Entity as NBT
aspect.aspects.integrateddynamics.read.string.block.biome.name=Biome
aspect.aspects.integrateddynamics.read.string.block.biome.info=The biome name at the target
aspect.aspects.integrateddynamics.read.integer.block.light.name=Light Level
aspect.aspects.integrateddynamics.read.integer.block.light.info=The light level at the target

aspect.aspects.integrateddynamics.read.block.block.name=Block
aspect.aspects.integrateddynamics.read.block.block.info=The target block

## Entity aspects
aspect.aspects.integrateddynamics.read.integer.entity.itemframerotation.name=Item Frame Rotation
aspect.aspects.integrateddynamics.read.integer.entity.itemframerotation.info=The index of the rotation the item in the attached Item Frame has.

aspect.aspects.integrateddynamics.read.list.entity.entities.name=Entities
aspect.aspects.integrateddynamics.read.list.entity.entities.info=The entities in the target space
aspect.aspects.integrateddynamics.read.list.entity.players.name=Players
aspect.aspects.integrateddynamics.read.list.entity.players.info=The players that are in this world

aspect.aspects.integrateddynamics.read.entity.entity.name=Entity
aspect.aspects.integrateddynamics.read.entity.entity.info=The selected entity in the target space

aspect.aspects.integrateddynamics.read.itemstack.entity.itemframecontents.name=Item Frame
aspect.aspects.integrateddynamics.read.itemstack.entity.itemframecontents.info=The item in an Item Frame attached to the reader

## Extra-Dimensional aspects
aspect.aspects.integrateddynamics.read.integer.extradimensional.random.name=Random
aspect.aspects.integrateddynamics.read.integer.extradimensional.random.info=A random integer value
aspect.aspects.integrateddynamics.read.integer.extradimensional.playercount.name=Player Count
aspect.aspects.integrateddynamics.read.integer.extradimensional.playercount.info=The amount of players in the server
aspect.aspects.integrateddynamics.read.integer.extradimensional.ticktime.name=Tick time
aspect.aspects.integrateddynamics.read.integer.extradimensional.ticktime.info=The average tick time in nanoseconds for the server
aspect.aspects.integrateddynamics.read.double.extradimensional.tps.name=TPS
aspect.aspects.integrateddynamics.read.double.extradimensional.tps.info=The average number of ticks per second over all worlds
aspect.aspects.integrateddynamics.read.list.extradimensional.players.name=Players
aspect.aspects.integrateddynamics.read.list.extradimensional.players.info=The players that are online on this server

## Fluid aspects
aspect.aspects.integrateddynamics.read.boolean.fluid.empty.name=Tank Empty
aspect.aspects.integrateddynamics.read.boolean.fluid.empty.info=If the target fluid tank is empty
aspect.aspects.integrateddynamics.read.boolean.fluid.full.name=Tank Full
aspect.aspects.integrateddynamics.read.boolean.fluid.full.info=If the target fluid tank is full
aspect.aspects.integrateddynamics.read.boolean.fluid.nonempty.name=Tank Not Empty
aspect.aspects.integrateddynamics.read.boolean.fluid.nonempty.info=If the target fluid tank has something in it
aspect.aspects.integrateddynamics.read.boolean.fluid.applicable.name=Is Tank
aspect.aspects.integrateddynamics.read.boolean.fluid.applicable.info=If the target has a fluid tank

aspect.aspects.integrateddynamics.read.integer.fluid.amount.name=Fluid Amount
aspect.aspects.integrateddynamics.read.integer.fluid.amount.info=The amount of fluid in mB in the active tank
aspect.aspects.integrateddynamics.read.integer.fluid.totalamount.name=Total Fluid Amount
aspect.aspects.integrateddynamics.read.integer.fluid.totalamount.info=The total amount of fluid in mB
aspect.aspects.integrateddynamics.read.integer.fluid.capacity.name=Fluid Capacity
aspect.aspects.integrateddynamics.read.integer.fluid.capacity.info=Total capacity of the active tank
aspect.aspects.integrateddynamics.read.integer.fluid.totalcapacity.name=Total Fluid Capacity
aspect.aspects.integrateddynamics.read.integer.fluid.totalcapacity.info=Total capacity of the tank
aspect.aspects.integrateddynamics.read.integer.fluid.tanks.name=Tanks
aspect.aspects.integrateddynamics.read.integer.fluid.tanks.info=The amount of tanks found at the target

aspect.aspects.integrateddynamics.read.double.fluid.fillratio.name=Fluid Fill Ratio
aspect.aspects.integrateddynamics.read.double.fluid.fillratio.info=The amount of fluid in the active tank divided by its capacity

aspect.aspects.integrateddynamics.read.list.fluid.fluidstacks.name=Tank Fluids
aspect.aspects.integrateddynamics.read.list.fluid.fluidstacks.info=The list of fluids in all tanks
aspect.aspects.integrateddynamics.read.list.fluid.capacities.name=Tank Capacities
aspect.aspects.integrateddynamics.read.list.fluid.capacities.info=The list of capacities of all tanks

aspect.aspects.integrateddynamics.read.fluidstack.fluid.name=Tank Fluid
aspect.aspects.integrateddynamics.read.fluidstack.fluid.info=The fluid in the target tank
aspect.aspects.integrateddynamics.read.fluidstack.block.name=Block Fluid
aspect.aspects.integrateddynamics.read.fluidstack.block.info=The fluid in the target block

## Inventory aspects
aspect.aspects.integrateddynamics.read.boolean.inventory.full.name=Inventory Full
aspect.aspects.integrateddynamics.read.boolean.inventory.full.info=If all slots have at least one item
aspect.aspects.integrateddynamics.read.boolean.inventory.empty.name=Inventory Empty
aspect.aspects.integrateddynamics.read.boolean.inventory.empty.info=If all slots are empty
aspect.aspects.integrateddynamics.read.boolean.inventory.nonempty.name=Inventory Not Empty
aspect.aspects.integrateddynamics.read.boolean.inventory.nonempty.info=If there is at least one item
aspect.aspects.integrateddynamics.read.boolean.inventory.applicable.name=Is Inventory
aspect.aspects.integrateddynamics.read.boolean.inventory.applicable.info=If the target has an inventory

aspect.aspects.integrateddynamics.read.integer.inventory.count.name=Inventory Count
aspect.aspects.integrateddynamics.read.integer.inventory.count.info=Get the total amount of items
aspect.aspects.integrateddynamics.read.integer.inventory.countslot.name=Slot Stacksize
aspect.aspects.integrateddynamics.read.integer.inventory.countslot.info=Get the stack size in the active slot
aspect.aspects.integrateddynamics.read.integer.inventory.slots.name=Slots
aspect.aspects.integrateddynamics.read.integer.inventory.slots.info=The number of slots in the inventory
aspect.aspects.integrateddynamics.read.integer.inventory.slotsfilled.name=Slots Filled
aspect.aspects.integrateddynamics.read.integer.inventory.slotsfilled.info=The number of slots that have an item

aspect.aspects.integrateddynamics.read.double.inventory.fillratio.name=Fill Ratio
aspect.aspects.integrateddynamics.read.double.inventory.fillratio.info=The number of non-empty slots divided by the total number of slots

aspect.aspects.integrateddynamics.read.list.inventory.itemstacks.name=Items
aspect.aspects.integrateddynamics.read.list.inventory.itemstacks.info=Get a list of the items in the inventory

aspect.aspects.integrateddynamics.read.itemstack.inventory.name=Slot Item
aspect.aspects.integrateddynamics.read.itemstack.inventory.info=Get the Item in the active slot

## Machine aspects
aspect.aspects.integrateddynamics.read.boolean.machine.isworker.name=Is Worker
aspect.aspects.integrateddynamics.read.boolean.machine.isworker.info=If the target is a worker machine
aspect.aspects.integrateddynamics.read.boolean.machine.haswork.name=Has Work
aspect.aspects.integrateddynamics.read.boolean.machine.haswork.info=If the target has work to process
aspect.aspects.integrateddynamics.read.boolean.machine.canwork.name=Can Work
aspect.aspects.integrateddynamics.read.boolean.machine.canwork.info=If the target would be able to start working in its current state
aspect.aspects.integrateddynamics.read.boolean.machine.isworking.name=Is Working
aspect.aspects.integrateddynamics.read.boolean.machine.isworking.info=If the target is currently working
aspect.aspects.integrateddynamics.read.boolean.temperature.istemperature.name=Has Temperature
aspect.aspects.integrateddynamics.read.boolean.temperature.istemperature.info=If the target has a certain temperature
aspect.aspects.integrateddynamics.read.double.temperature.temperature.name=Temperature
aspect.aspects.integrateddynamics.read.double.temperature.temperature.info=The current temperature of the target in degrees Kelvin
aspect.aspects.integrateddynamics.read.double.temperature.maxtemperature.name=Maximum Temperature
aspect.aspects.integrateddynamics.read.double.temperature.maxtemperature.info=The maximum temperature of the target in degrees Kelvin
aspect.aspects.integrateddynamics.read.double.temperature.mintemperature.name=Minimum Temperature
aspect.aspects.integrateddynamics.read.double.temperature.mintemperature.info=The minimum temperature of the target in degrees Kelvin
aspect.aspects.integrateddynamics.read.double.temperature.defaulttemperature.name=Default Temperature
aspect.aspects.integrateddynamics.read.double.temperature.defaulttemperature.info=The default temperature of the target in degrees Kelvin
aspect.aspects.integrateddynamics.read.boolean.recipehandler.applicable.name=Is Recipe Handler
aspect.aspects.integrateddynamics.read.boolean.recipehandler.applicable.info=If the target can handle recipes
aspect.aspects.integrateddynamics.read.list.recipehandler.recipes.name=Recipes
aspect.aspects.integrateddynamics.read.list.recipehandler.recipes.info=Recipes that can be handled by the target
aspect.aspects.integrateddynamics.read.operator.recipehandler.recipeoutputbyinput.name=Recipe Output By Input
aspect.aspects.integrateddynamics.read.operator.recipehandler.recipeoutputbyinput.info=An operator that returns the resulting recipe output for a given input.
aspect.aspects.integrateddynamics.read.operator.recipehandler.recipeinputsbyoutput.name=Recipe Inputs By Output
aspect.aspects.integrateddynamics.read.operator.recipehandler.recipeinputsbyoutput.info=An operator that returns all possible recipe inputs for a given output.
aspect.aspects.integrateddynamics.read.operator.recipehandler.recipesbyinput.name=Recipes By Input
aspect.aspects.integrateddynamics.read.operator.recipehandler.recipesbyinput.info=An operator that returns all possible recipes for a given input.
aspect.aspects.integrateddynamics.read.operator.recipehandler.recipesbyoutput.name=Recipes By Output
aspect.aspects.integrateddynamics.read.operator.recipehandler.recipesbyoutput.info=An operator that returns all possible recipes for a given output.
aspect.aspects.integrateddynamics.read.operator.recipehandler.recipebyinput.name=Recipe By Input
aspect.aspects.integrateddynamics.read.operator.recipehandler.recipebyinput.info=An operator that returns a recipe for a given input.
aspect.aspects.integrateddynamics.read.operator.recipehandler.recipebyoutput.name=Recipe By Output
aspect.aspects.integrateddynamics.read.operator.recipehandler.recipebyoutput.info=An operator that returns a recipe for a given output.
aspect.aspects.integrateddynamics.read.boolean.fe.applicable.name=Is FE Handler
aspect.aspects.integrateddynamics.read.boolean.fe.applicable.info=If the target in some way handles FE
aspect.aspects.integrateddynamics.read.boolean.fe.isreceiver.name=Is FE Receiver
aspect.aspects.integrateddynamics.read.boolean.fe.isreceiver.info=If the target can receive FE
aspect.aspects.integrateddynamics.read.boolean.fe.isprovider.name=Is FE Provider
aspect.aspects.integrateddynamics.read.boolean.fe.isprovider.info=If the target can provide FE
aspect.aspects.integrateddynamics.read.boolean.fe.canextract.name=Can Extract FE
aspect.aspects.integrateddynamics.read.boolean.fe.canextract.info=If FE can really be extracted from the target, takes into account storage
aspect.aspects.integrateddynamics.read.boolean.fe.caninsert.name=Can Insert FE
aspect.aspects.integrateddynamics.read.boolean.fe.caninsert.info=If FE can really be inserted into the target, takes into account storage and capacity
aspect.aspects.integrateddynamics.read.boolean.fe.isfull.name=Is FE Buffer Full
aspect.aspects.integrateddynamics.read.boolean.fe.isfull.info=If the target's FE buffer is completely full
aspect.aspects.integrateddynamics.read.boolean.fe.isempty.name=Is FE Buffer Empty
aspect.aspects.integrateddynamics.read.boolean.fe.isempty.info=If the target's FE buffer is completely empty
aspect.aspects.integrateddynamics.read.boolean.fe.isnonempty.name=Is FE Buffer Not Empty
aspect.aspects.integrateddynamics.read.boolean.fe.isnonempty.info=If the target's FE buffer is not empty
aspect.aspects.integrateddynamics.read.integer.fe.amount.name=Stored FE
aspect.aspects.integrateddynamics.read.integer.fe.amount.info=The amount of FE stored in the target
aspect.aspects.integrateddynamics.read.integer.fe.capacity.name=FE Capacity
aspect.aspects.integrateddynamics.read.integer.fe.capacity.info=The FE capacity of the target
aspect.aspects.integrateddynamics.read.double.fe.fillratio.name=FE Fill Ratio
aspect.aspects.integrateddynamics.read.double.fe.fillratio.info=The amount of FE in the target divided by its capacity

## Network aspects
aspect.aspects.integrateddynamics.read.boolean.network.applicable.name=Is Network
aspect.aspects.integrateddynamics.read.boolean.network.applicable.info=If the target has a network
aspect.aspects.integrateddynamics.read.integer.network.elementcount.name=Elements
aspect.aspects.integrateddynamics.read.integer.network.elementcount.info=The amount of elements in the target network
aspect.aspects.integrateddynamics.read.integer.network.energy.batterycount.name=Energy Batteries
aspect.aspects.integrateddynamics.read.integer.network.energy.batterycount.info=The amount of energy batteries in the target network
aspect.aspects.integrateddynamics.read.integer.network.energy.stored.name=Energy Stored
aspect.aspects.integrateddynamics.read.integer.network.energy.stored.info=The amount of energy available in the target network
aspect.aspects.integrateddynamics.read.integer.network.energy.max.name=Energy Capacity
aspect.aspects.integrateddynamics.read.integer.network.energy.max.info=The energy capacity of the network
aspect.aspects.integrateddynamics.read.integer.network.energy.consumptionrate.name=Energy Consumption Rate
aspect.aspects.integrateddynamics.read.integer.network.energy.consumptionrate.info=The current energy consumption rate of the target network per tick
aspect.aspects.integrateddynamics.read.any.network.value.name=Value
aspect.aspects.integrateddynamics.read.any.network.value.info=The value that is being exposed by the target

## Redstone aspects
aspect.aspects.integrateddynamics.read.boolean.redstone.high.name=Redstone High
aspect.aspects.integrateddynamics.read.boolean.redstone.high.info=If the redstone level is at its maximum
aspect.aspects.integrateddynamics.read.boolean.redstone.low.name=Redstone Low
aspect.aspects.integrateddynamics.read.boolean.redstone.low.info=If there is no redstone level
aspect.aspects.integrateddynamics.read.boolean.redstone.nonlow.name=Redstone
aspect.aspects.integrateddynamics.read.boolean.redstone.nonlow.info=If there is a redstone level
aspect.aspects.integrateddynamics.read.boolean.redstone.clock.name=Redstone Clock
aspect.aspects.integrateddynamics.read.boolean.redstone.clock.info=Pulses with a configurable length and interval.
aspect.aspects.integrateddynamics.read.integer.redstone.value.name=Redstone
aspect.aspects.integrateddynamics.read.integer.redstone.value.info=Get the exact redstone level
aspect.aspects.integrateddynamics.read.integer.redstone.comparator.name=Comparator
aspect.aspects.integrateddynamics.read.integer.redstone.comparator.info=Get the comparator value

aspect.aspects.integrateddynamics.write.boolean.redstone.name=Redstone
aspect.aspects.integrateddynamics.write.boolean.redstone.info=Outputs a full redstone signal if true
aspect.aspects.integrateddynamics.write.boolean.redstone.pulse.name=Redstone Pulse
aspect.aspects.integrateddynamics.write.boolean.redstone.pulse.info=Outputs a pulse with the configured redstone value if the given value changes.

aspect.aspects.integrateddynamics.write.integer.redstone.name=Redstone
aspect.aspects.integrateddynamics.write.integer.redstone.info=Outputs the value as exact redstone signal
aspect.aspects.integrateddynamics.write.integer.redstone.pulse.name=Redstone Pulse
aspect.aspects.integrateddynamics.write.integer.redstone.pulse.info=Outputs a pulse with the configured redstone value if the given value changes.

## World aspects
aspect.aspects.integrateddynamics.read.boolean.world.entity.name=Has Entity
aspect.aspects.integrateddynamics.read.boolean.world.entity.info=If the target space has an entity
aspect.aspects.integrateddynamics.read.boolean.world.mob.name=Has Mob
aspect.aspects.integrateddynamics.read.boolean.world.mob.info=If the target space has a mob
aspect.aspects.integrateddynamics.read.boolean.world.animal.name=Has Animal
aspect.aspects.integrateddynamics.read.boolean.world.animal.info=If the target space has an animal
aspect.aspects.integrateddynamics.read.boolean.world.player.name=Has Player
aspect.aspects.integrateddynamics.read.boolean.world.player.info=If the target space has a player
aspect.aspects.integrateddynamics.read.boolean.world.item.name=Has Item
aspect.aspects.integrateddynamics.read.boolean.world.item.info=If the target space has an item
aspect.aspects.integrateddynamics.read.boolean.world.weather.clear.name=Weather: Clear
aspect.aspects.integrateddynamics.read.boolean.world.weather.clear.info=If there is a clear weather in the world
aspect.aspects.integrateddynamics.read.boolean.world.weather.raining.name=Weather: Rain
aspect.aspects.integrateddynamics.read.boolean.world.weather.raining.info=If there it is raining in the world
aspect.aspects.integrateddynamics.read.boolean.world.weather.thunder.name=Weather: Thunder
aspect.aspects.integrateddynamics.read.boolean.world.weather.thunder.info=If there is a thunderstorm in the world
aspect.aspects.integrateddynamics.read.boolean.world.isday.name=Is Day
aspect.aspects.integrateddynamics.read.boolean.world.isday.info=If it is day in the target world
aspect.aspects.integrateddynamics.read.boolean.world.isnight.name=Is Night
aspect.aspects.integrateddynamics.read.boolean.world.isnight.info=If it is night in the target world

aspect.aspects.integrateddynamics.read.integer.world.entity.name=Entities
aspect.aspects.integrateddynamics.read.integer.world.entity.info=The amount of entities at the target space
aspect.aspects.integrateddynamics.read.integer.world.raincountdown.name=Rain Countdown
aspect.aspects.integrateddynamics.read.integer.world.raincountdown.info=The amount of ticks until it will rain in this world
aspect.aspects.integrateddynamics.read.integer.world.ticktime.name=Tick time
aspect.aspects.integrateddynamics.read.integer.world.ticktime.info=The average tick time in milliseconds for this world
aspect.aspects.integrateddynamics.read.integer.world.daytime.name=Day Time
aspect.aspects.integrateddynamics.read.integer.world.daytime.info=The time that has passed in the target world day
aspect.aspects.integrateddynamics.read.integer.world.lightlevel.name=Light Level
aspect.aspects.integrateddynamics.read.integer.world.lightlevel.info=The light level at the target
aspect.aspects.integrateddynamics.read.integer.world.players.name=Player Count
aspect.aspects.integrateddynamics.read.integer.world.players.info=The players that are online in this world

aspect.aspects.integrateddynamics.read.double.world.tps.name=TPS
aspect.aspects.integrateddynamics.read.double.world.tps.info=The number of ticks per second in this world

aspect.aspects.integrateddynamics.read.long.world.time.name=Time
aspect.aspects.integrateddynamics.read.long.world.time.info=The world time dependent of the set time command
aspect.aspects.integrateddynamics.read.long.world.totaltime.name=Total Time
aspect.aspects.integrateddynamics.read.long.world.totaltime.info=The world time independent of the set time command

aspect.aspects.integrateddynamics.read.string.world.worldname.name=World Name
aspect.aspects.integrateddynamics.read.string.world.worldname.info=The target world name

aspect.aspects.integrateddynamics.read.list.world.players.name=Players
aspect.aspects.integrateddynamics.read.list.world.players.info=The players that are in this world

# Aspect property types
aspect.aspecttypes.integrateddynamics.integer.tankid.name=Tank ID
aspect.aspecttypes.integrateddynamics.integer.slotid.name=Slot ID
aspect.aspecttypes.integrateddynamics.integer.listindex.name=List Element
aspect.aspecttypes.integrateddynamics.integer.range.name=Range

aspect.aspecttypes.integrateddynamics.integer.channel.name=Channel

aspect.aspecttypes.integrateddynamics.integer.interval.name=Pulse Interval
aspect.aspecttypes.integrateddynamics.integer.length.name=Pulse Length
aspect.aspecttypes.integrateddynamics.integer.offset.name=Pulse Time Offset

aspect.aspecttypes.integrateddynamics.double.volume.name=Volume
aspect.aspecttypes.integrateddynamics.double.frequency.name=Frequency
aspect.aspecttypes.integrateddynamics.integer.range.name=Range

aspect.aspecttypes.integrateddynamics.double.offset_x.name=X Offset
aspect.aspecttypes.integrateddynamics.double.offset_y.name=Y Offset
aspect.aspecttypes.integrateddynamics.double.offset_z.name=Z Offset
aspect.aspecttypes.integrateddynamics.integer.particles.name=Particle Count
aspect.aspecttypes.integrateddynamics.double.spread_x.name=X Spread
aspect.aspecttypes.integrateddynamics.double.spread_y.name=Y Spread
aspect.aspecttypes.integrateddynamics.double.spread_z.name=Z Spread
aspect.aspecttypes.integrateddynamics.boolean.force_particle.name=Force Spawning

aspect.aspecttypes.integrateddynamics.boolean.strong_power.name=Strong Power
aspect.aspecttypes.integrateddynamics.boolean.strong_power.info=If a Redstone Torch should be simulated instead of regular Redstone Dust
aspect.aspecttypes.integrateddynamics.integer.pulse_emit_value.name=Pulse Value
aspect.aspecttypes.integrateddynamics.integer.pulse_emit_value.info=The pulse value that should be emitted.

# Operators
operator.operators.integrateddynamics.name=Operator
operator.integrateddynamics.applied.operator_name=Applied %s [%s]
operator.integrateddynamics.applied.type=§Applied to: §r%s
operator.integrateddynamics.tooltip.operator_name=§eOperator: §r%s (%s)
operator.integrateddynamics.tooltip.operator_category=§eCategory: §r%s
operator.integrateddynamics.tooltip.variable_ids=§eVariable IDs: §r§o%s
operator.integrateddynamics.tooltip.input_type_name=§eInput Type %s: §r%s
operator.integrateddynamics.tooltip.output_type_name=§eOutput Type: §r%s
operator.integrateddynamics.error.wrong_input_length=The operator %s received an input of length %s while it needs a length of %s.
operator.integrateddynamics.error.null_type=The operator %s received an input with a null variable at position %s.
operator.integrateddynamics.error.wrong_type=The operator %s received an input with type %s at position %s while the type %s was expected.
operator.integrateddynamics.error.wrong_currying_type=The operator %s received an input with type %s at position %s while the type %s was expected for currying.
operator.integrateddynamics.error.currying_overflow=While currying the operator %s (%s inputs) with %s inputs, an operator was expected as output, but got %s.
operator.integrateddynamics.error.wrong_predicate=The operator %s received an input operator that outputs the type %s while the type %s was expected.
operator.integrateddynamics.error.illegal_property=The property is expected to output %s, while %s was found for operator %s.
operator.integrateddynamics.error.variable_not_in_network=Variable with id %s could not be found within the current network.
operator.integrateddynamics.error.cyclic_reference=Variable with id %s depends on itself, infinite recursion.
operator.integrateddynamics.error.wrong_input_length_virtual=The operator %s received the operator %s with input length %s while length %s is required.
operator.integrateddynamics.error.operator_recursion_limit=Reached the operator recursion limit of %s invocations for %s. Trying to crash the game, are you?

operator.operators.integrateddynamics.logical.name=Logical
operator.operators.integrateddynamics.logical.basename=Logical %s
operator.operators.integrateddynamics.logical.and.name=And
operator.operators.integrateddynamics.logical.or.name=Or
operator.operators.integrateddynamics.logical.not.name=Not
operator.operators.integrateddynamics.logical.nand.name=Nand
operator.operators.integrateddynamics.logical.nor.name=Nor

operator.operators.integrateddynamics.arithmetic.name=Arithmetic
operator.operators.integrateddynamics.arithmetic.basename=Arithmetic %s
operator.operators.integrateddynamics.arithmetic.addition.name=Addition
operator.operators.integrateddynamics.arithmetic.subtraction.name=Subtraction
operator.operators.integrateddynamics.arithmetic.multiplication.name=Multiplication
operator.operators.integrateddynamics.arithmetic.division.name=Division
operator.operators.integrateddynamics.arithmetic.maximum.name=Maximum
operator.operators.integrateddynamics.arithmetic.maximum.info=Takes the largest of two values.
operator.operators.integrateddynamics.arithmetic.minimum.name=Minimum
operator.operators.integrateddynamics.arithmetic.minimum.info=Takes the smallest of two values.

operator.operators.integrateddynamics.integer.name=Integer
operator.operators.integrateddynamics.integer.basename=Integer %s
operator.operators.integrateddynamics.integer.modulus.name=Modulus
operator.operators.integrateddynamics.integer.increment.name=Increment
operator.operators.integrateddynamics.integer.decrement.name=Decrement

operator.operators.integrateddynamics.relational.name=Relational
operator.operators.integrateddynamics.relational.basename=Relational %s
operator.operators.integrateddynamics.relational.equals.name=Equals
operator.operators.integrateddynamics.relational.equals.info=Type one and two must be equal.
operator.operators.integrateddynamics.relational.gt.name=Greater Than
operator.operators.integrateddynamics.relational.lt.name=Less Than
operator.operators.integrateddynamics.relational.notequals.name=Not Equals
operator.operators.integrateddynamics.relational.notequals.info=Type one and two must be equal.
operator.operators.integrateddynamics.relational.ge.name=Greater Than or Equal
operator.operators.integrateddynamics.relational.le.name=Less Than or Equal

operator.operators.integrateddynamics.binary.name=Binary
operator.operators.integrateddynamics.binary.basename=Binary %s
operator.operators.integrateddynamics.binary.and.name=And
operator.operators.integrateddynamics.binary.or.name=Or
operator.operators.integrateddynamics.binary.xor.name=Xor
operator.operators.integrateddynamics.binary.complement.name=Complement
operator.operators.integrateddynamics.binary.rshift.name=Right Shift
operator.operators.integrateddynamics.binary.rshift.info=Right Shift with ones fill
operator.operators.integrateddynamics.binary.lshift.name=Left Shift
operator.operators.integrateddynamics.binary.rzshift.name=Right Zero Shift
operator.operators.integrateddynamics.binary.rzshift.info=Right Shift with zeros fill

operator.operators.integrateddynamics.string.name=String
operator.operators.integrateddynamics.string.basename=String %s
operator.operators.integrateddynamics.string.length.name=Length
operator.operators.integrateddynamics.string.length.info=The length of the given String
operator.operators.integrateddynamics.string.concat.name=Concat
operator.operators.integrateddynamics.string.concat.info=Concatenate the two given Strings to one
operator.operators.integrateddynamics.string.contains.name=String Contains
operator.operators.integrateddynamics.string.contains.info=If the given substring is contained within the given string.
operator.operators.integrateddynamics.string.contains_regex.name=Contains Regex
operator.operators.integrateddynamics.string.contains_regex.info=If the regular expression given matches any substring of the given string.
operator.operators.integrateddynamics.string.matches_regex.name=Matches Regex
operator.operators.integrateddynamics.string.matches_regex.info=If the regular expression given matches the given string.
operator.operators.integrateddynamics.string.index_of.name=Index Of
operator.operators.integrateddynamics.string.index_of.info=Get the index of the first occurrence of a substring matching the search term in the given string.
operator.operators.integrateddynamics.string.index_of_regex.name=Index Of Regex
operator.operators.integrateddynamics.string.index_of_regex.info=Get the index of the first occurrence of a substring matching the pattern in the given string.
operator.operators.integrateddynamics.string.starts_with.name=Starts With
operator.operators.integrateddynamics.string.starts_with.info=If the given substring matches the start of the given string.
operator.operators.integrateddynamics.string.ends_with.name=Ends With
operator.operators.integrateddynamics.string.ends_with.info=If the string given matches the end of the given string.
operator.operators.integrateddynamics.string.split_on.name=Split On
operator.operators.integrateddynamics.string.split_on.info=Get a list containing pieces, split on the given (literal) delimiter, of the given string.
operator.operators.integrateddynamics.string.split_on_regex.name=Split On Regex
operator.operators.integrateddynamics.string.split_on_regex.info=Get a list containing pieces, split on the given regular expression, of the given string.
operator.operators.integrateddynamics.string.substring.name=Substring
operator.operators.integrateddynamics.string.substring.info=Get a substring, from the given index (inclusive) to the given index (exclusive), of the given string.
operator.operators.integrateddynamics.string.regex_group.name=Regex Group
operator.operators.integrateddynamics.string.regex_group.info=Search for the given regular expression and return in that match the group at the given index, in the given string.
operator.operators.integrateddynamics.string.regex_groups.name=Regex Groups
operator.operators.integrateddynamics.string.regex_groups.info=Search for the given regular expression and return in that match a list of all its groups, in the given string.
operator.operators.integrateddynamics.string.regex_scan.name=Regex Scan
operator.operators.integrateddynamics.string.regex_scan.info=Search for all matches of the given regular expression and return the group at the given index, in the given string.
operator.operators.integrateddynamics.string.replace.name=Replace
operator.operators.integrateddynamics.string.replace.info=Find all instances of the search term and replace them with the given string, in the given string.
operator.operators.integrateddynamics.string.replace_regex.name=Replace Regex
operator.operators.integrateddynamics.string.replace_regex.info=Find all matches of the search pattern and replace them with the given string, in the given string.
operator.operators.integrateddynamics.string.join.name=Join
operator.operators.integrateddynamics.string.join.info=Create a joined string with the given string delimiter and the given list of strings.
operator.operators.integrateddynamics.string.name.name=Name
operator.operators.integrateddynamics.string.name.info=Get the name of a named object or converts it to a string
operator.operators.integrateddynamics.string.unique_name.name=Unique Name
operator.operators.integrateddynamics.string.unique_name.info=Get the unique name of an object

operator.operators.integrateddynamics.double.name=Double
operator.operators.integrateddynamics.double.basename=Double %s
operator.operators.integrateddynamics.double.round.name=Round
operator.operators.integrateddynamics.double.round.info=Round to the nearest Integer
operator.operators.integrateddynamics.double.ceil.name=Ceil
operator.operators.integrateddynamics.double.ceil.info=Round up to the nearest Integer
operator.operators.integrateddynamics.double.floor.name=Floor
operator.operators.integrateddynamics.double.floor.info=Round down to the nearest Integer

operator.operators.integrateddynamics.list.name=List
operator.operators.integrateddynamics.list.basename=List %s
operator.operators.integrateddynamics.list.length.name=Length
operator.operators.integrateddynamics.list.length.info=The length of the given list
operator.operators.integrateddynamics.list.empty.name=Empty
operator.operators.integrateddynamics.list.empty.info=If the list is empty
operator.operators.integrateddynamics.list.notempty.name=Not Empty
operator.operators.integrateddynamics.list.notempty.info=If the list is not empty
operator.operators.integrateddynamics.list.get.name=Get
operator.operators.integrateddynamics.list.get.info=Get the list element at the given position, throws an error if the index is out of bounds.
operator.operators.integrateddynamics.list.get_or_default.name=Get Or Default
operator.operators.integrateddynamics.list.get_or_default.info=Safely get the list element at the given position, if that element is not available, return the given default value.
operator.operators.integrateddynamics.list.contains.name=Contains
operator.operators.integrateddynamics.list.contains.info=If the list contains the given element.
operator.operators.integrateddynamics.list.contains_p.name=Contains Predicate
operator.operators.integrateddynamics.list.contains_p.info=If at least one of the elements of the list returns true for the given predicate.
operator.operators.integrateddynamics.list.count.name=Count
operator.operators.integrateddynamics.list.count.info=The number of times the given element is found in the list.
operator.operators.integrateddynamics.list.count_p.name=Count Predicate
operator.operators.integrateddynamics.list.count_p.info=The number of times the given predicate returns true for the elements in the list.
operator.operators.integrateddynamics.list.append.name=Append
operator.operators.integrateddynamics.list.append.info=Append to the given list the given item.
operator.operators.integrateddynamics.list.concat.name=Concat
operator.operators.integrateddynamics.list.concat.info=Concatenate the two list to each other.
operator.operators.integrateddynamics.list.lazybuilt.name=Lazy List Builder
operator.operators.integrateddynamics.list.lazybuilt.info=Build a list lazily using a start value and an operator that is applied to the previous element to get a next element.
operator.operators.integrateddynamics.list.head.name=Head
operator.operators.integrateddynamics.list.head.info=Get the first element of the given list.
operator.operators.integrateddynamics.list.tail.name=Tail
operator.operators.integrateddynamics.list.tail.info=Remove the first element from the list.
operator.operators.integrateddynamics.list.uniq_p.name=Unique Predicate
operator.operators.integrateddynamics.list.uniq_p.info=Deduplicate all elements in the list based on the given comparator predicate.
operator.operators.integrateddynamics.list.uniq.name=Uniq
operator.operators.integrateddynamics.list.uniq.info=Deduplicate all elements in the list.
operator.operators.integrateddynamics.list.slice.name=Slice
operator.operators.integrateddynamics.list.slice.info=Take a subset of the given list from the given index (inclusive) to the given index (exclusive).

operator.operators.integrateddynamics.block.name=Block
operator.operators.integrateddynamics.block.basename=Block %s
operator.operators.integrateddynamics.block.opaque.name=Opaque
operator.operators.integrateddynamics.block.opaque.info=If the given block is opaque, non-transparent
operator.operators.integrateddynamics.block.itemstack.name=Item
operator.operators.integrateddynamics.block.itemstack.info=The item representation of the given block
operator.operators.integrateddynamics.block.mod.name=Mod
operator.operators.integrateddynamics.block.mod.info=The name of the mod owning the given block
operator.operators.integrateddynamics.block.breaksound.name=Block Break Sound
operator.operators.integrateddynamics.block.breaksound.info=The break sound of the given block
operator.operators.integrateddynamics.block.placesound.name=Block Place Sound
operator.operators.integrateddynamics.block.placesound.info=The place sound of the given block
operator.operators.integrateddynamics.block.stepsound.name=Block Step Sound
operator.operators.integrateddynamics.block.stepsound.info=The step sound of the given block
operator.operators.integrateddynamics.block.isshearable.name=Block Is Shearable
operator.operators.integrateddynamics.block.isshearable.info=If the given block is shearable
operator.operators.integrateddynamics.block.isplantable.name=Block Is Plant
operator.operators.integrateddynamics.block.isplantable.info=If the given block is a plant
operator.operators.integrateddynamics.block.planttype.name=Block Plant Type
operator.operators.integrateddynamics.block.planttype.info=The plant type of the given block
operator.operators.integrateddynamics.block.plant.name=Block Plant
operator.operators.integrateddynamics.block.plant.info=The resulting block when this block is planted
operator.operators.integrateddynamics.block.cansustainplantblock.name=Block Can Sustain Block Plant
operator.operators.integrateddynamics.block.cansustainplantblock.info=If the given block can sustain the given block plant
operator.operators.integrateddynamics.block.cansustainplantitem.name=Block Can Sustain Item Plant
operator.operators.integrateddynamics.block.cansustainplantitem.info=If the given block can sustain the given item plant
operator.operators.integrateddynamics.block.plantage.name=Block Plant Age
operator.operators.integrateddynamics.block.plantage.info=The age of the given plant block
operator.operators.integrateddynamics.block.blockbyname.name=Block By Name
operator.operators.integrateddynamics.block.blockbyname.info=Get the block corresponding to the given unique name, add space+number for indicating the metadata.

operator.operators.integrateddynamics.itemstack.name=Item
operator.operators.integrateddynamics.itemstack.basename=Item %s
operator.operators.integrateddynamics.itemstack.size.name=Size
operator.operators.integrateddynamics.itemstack.size.info=The current stack size
operator.operators.integrateddynamics.itemstack.maxsize.name=Max size
operator.operators.integrateddynamics.itemstack.maxsize.info=The maximum stack size
operator.operators.integrateddynamics.itemstack.stackable.name=Stackable
operator.operators.integrateddynamics.itemstack.stackable.info=If the item stack can hold at least two items.
operator.operators.integrateddynamics.itemstack.damageable.name=Damageable
operator.operators.integrateddynamics.itemstack.damageable.info=If the item can take damage.
operator.operators.integrateddynamics.itemstack.damage.name=Damage
operator.operators.integrateddynamics.itemstack.damage.info=The current item damage
operator.operators.integrateddynamics.itemstack.maxdamage.name=Max Damage
operator.operators.integrateddynamics.itemstack.maxdamage.info=The maximum item damage
operator.operators.integrateddynamics.itemstack.enchanted.name=Enchanted
operator.operators.integrateddynamics.itemstack.enchanted.info=If the item is enchanted
operator.operators.integrateddynamics.itemstack.enchantable.name=Enchantable
operator.operators.integrateddynamics.itemstack.enchantable.info=If the item can be enchanted
operator.operators.integrateddynamics.itemstack.repaircost.name=Repair Cost
operator.operators.integrateddynamics.itemstack.repaircost.info=The repair cost of the item
operator.operators.integrateddynamics.itemstack.rarity.name=Rarity
operator.operators.integrateddynamics.itemstack.rarity.info=The rarity of the item
operator.operators.integrateddynamics.itemstack.strength.name=Strength vs Block
operator.operators.integrateddynamics.itemstack.strength.info=The strength this item has against the given block
operator.operators.integrateddynamics.itemstack.canharvest.name=Can Harvest
operator.operators.integrateddynamics.itemstack.canharvest.info=If the item can harvest the given block
operator.operators.integrateddynamics.itemstack.block.name=Block
operator.operators.integrateddynamics.itemstack.block.info=The block from the given item
operator.operators.integrateddynamics.itemstack.isfluidstack.name=Has Fluid
operator.operators.integrateddynamics.itemstack.isfluidstack.info=If the given item has a fluid
operator.operators.integrateddynamics.itemstack.fluidstack.name=Fluid
operator.operators.integrateddynamics.itemstack.fluidstack.info=The fluid from the given item
operator.operators.integrateddynamics.itemstack.fluidstackcapacity.name=Fluid Capacity
operator.operators.integrateddynamics.itemstack.fluidstackcapacity.info=The fluid capacity of the given item in mB
operator.operators.integrateddynamics.itemstack.isnbtequal.name=NBT equals
operator.operators.integrateddynamics.itemstack.isnbtequal.info=If the NBT tags of the given items are equal
operator.operators.integrateddynamics.itemstack.isitemequalnonbt.name=Raw item equals no NBT
operator.operators.integrateddynamics.itemstack.isitemequalnonbt.info=If the raw items of the given stacks are equal, ignoring NBT but including damage value.
operator.operators.integrateddynamics.itemstack.israwitemequal.name=Raw item equals
operator.operators.integrateddynamics.itemstack.israwitemequal.info=If the raw items of the given items are equal, ignoring NBT and damage value.
operator.operators.integrateddynamics.itemstack.mod.name=Mod
operator.operators.integrateddynamics.itemstack.mod.info=The name of the mod owning the given item
operator.operators.integrateddynamics.itemstack.burntime.name=Fuel Burn Time
operator.operators.integrateddynamics.itemstack.burntime.info=The fuel burn time in ticks of the given item
operator.operators.integrateddynamics.itemstack.canburn.name=Is Fuel
operator.operators.integrateddynamics.itemstack.canburn.info=If the given item can be used as fuel
operator.operators.integrateddynamics.itemstack.cansmelt.name=Is Smeltable
operator.operators.integrateddynamics.itemstack.cansmelt.info=If the given item can be smelted
operator.operators.integrateddynamics.itemstack.oredict.name=Oredictionary Names
operator.operators.integrateddynamics.itemstack.oredict.info=The oredictionary names (strings) of the given item
operator.operators.integrateddynamics.string.oredict.name=Oredictionary Values
operator.operators.integrateddynamics.string.oredict.info=The oredictionary values (items) of the given name
operator.operators.integrateddynamics.itemstack.hasinventory.name=Item Has Inventory
operator.operators.integrateddynamics.itemstack.hasinventory.info=If the given item has an inventory
operator.operators.integrateddynamics.itemstack.inventorysize.name=Item Inventory Size
operator.operators.integrateddynamics.itemstack.inventorysize.info=Retrieve the inventory size of the given item handler contents
operator.operators.integrateddynamics.itemstack.inventory.name=Item Inventory
operator.operators.integrateddynamics.itemstack.inventory.info=Retrieve the inventory of the given item handler contents
operator.operators.integrateddynamics.itemstack.withsize.name=Item With Stacksize
operator.operators.integrateddynamics.itemstack.withsize.info=Set the stacksize for the given item
operator.operators.integrateddynamics.itemstack.isplantable.name=Item Is Plant
operator.operators.integrateddynamics.itemstack.isplantable.info=If the given item is a plant
operator.operators.integrateddynamics.itemstack.planttype.name=Item Plant Type
operator.operators.integrateddynamics.itemstack.planttype.info=The plant type of the given item
operator.operators.integrateddynamics.itemstack.plant.name=Item Plant
operator.operators.integrateddynamics.itemstack.plant.info=The resulting block when this item is planted
operator.operators.integrateddynamics.itemstack.itembyname.name=Item By Name
operator.operators.integrateddynamics.itemstack.itembyname.info=Get the item corresponding to the given unique name, add space+number for indicating the metadata.
operator.operators.integrateddynamics.itemstack.itemlistcount.name=Item List Count
operator.operators.integrateddynamics.itemstack.itemlistcount.info=Get the total item count of exactly the given item in a list.
operator.operators.integrateddynamics.itemstack.nbt.name=Item NBT
operator.operators.integrateddynamics.itemstack.nbt.info=Get the NBT tag of the given item.
operator.operators.integrateddynamics.itemstack.hasnbt.name=Has NBT
operator.operators.integrateddynamics.itemstack.hasnbt.info=If the item stack has an NBT tag.

operator.operators.integrateddynamics.entity.name=Entity
operator.operators.integrateddynamics.entity.basename=Entity %s
operator.operators.integrateddynamics.entity.ismob.name=Is Mob
operator.operators.integrateddynamics.entity.ismob.info=If the entity is a mob
operator.operators.integrateddynamics.entity.isanimal.name=Is Animal
operator.operators.integrateddynamics.entity.isanimal.info=If the entity is an animal
operator.operators.integrateddynamics.entity.isitem.name=Is Item
operator.operators.integrateddynamics.entity.isitem.info=If the entity is an item
operator.operators.integrateddynamics.entity.isplayer.name=Is Player
operator.operators.integrateddynamics.entity.isplayer.info=If the entity is a player
operator.operators.integrateddynamics.entity.isminecart.name=Is Minecart
operator.operators.integrateddynamics.entity.isminecart.info=If the entity is a minecart
operator.operators.integrateddynamics.entity.item.name=Item
operator.operators.integrateddynamics.entity.item.info=The item from the item entity
operator.operators.integrateddynamics.entity.health.name=Health
operator.operators.integrateddynamics.entity.health.info=The entity health
operator.operators.integrateddynamics.entity.width.name=Width
operator.operators.integrateddynamics.entity.width.info=The entity width
operator.operators.integrateddynamics.entity.height.name=Height
operator.operators.integrateddynamics.entity.height.info=The entity height
operator.operators.integrateddynamics.entity.isburning.name=Is Burning
operator.operators.integrateddynamics.entity.isburning.info=If the entity is burning
operator.operators.integrateddynamics.entity.iswet.name=Is Wet
operator.operators.integrateddynamics.entity.iswet.info=If the entity is wet
operator.operators.integrateddynamics.entity.issneaking.name=Is Sneaking
operator.operators.integrateddynamics.entity.issneaking.info=If the entity is sneaking
operator.operators.integrateddynamics.entity.iseating.name=Is Eating
operator.operators.integrateddynamics.entity.iseating.info=If the entity is eating
operator.operators.integrateddynamics.entity.armorinventory.name=Armor Inventory
operator.operators.integrateddynamics.entity.armorinventory.info=The list of items the entity is carrying as armor.
operator.operators.integrateddynamics.entity.inventory.name=Player Inventory
operator.operators.integrateddynamics.entity.inventory.info=The list of items the player is carrying.
operator.operators.integrateddynamics.entity.mod.name=Mod
operator.operators.integrateddynamics.entity.mod.info=The name of the mod owning the given entity
operator.operators.integrateddynamics.entity.targetblock.name=Target Block
operator.operators.integrateddynamics.entity.targetblock.info=The block the given entity is currently looking at.
operator.operators.integrateddynamics.entity.targetentity.name=Target Entity
operator.operators.integrateddynamics.entity.targetentity.info=The entity the given entity is currently looking at.
operator.operators.integrateddynamics.entity.hasguiopen.name=Has Gui Open
operator.operators.integrateddynamics.entity.hasguiopen.info=If the given player has an external gui open.
operator.operators.integrateddynamics.entity.helditem.name=Held Item Mainhand
operator.operators.integrateddynamics.entity.helditem.info=The item the given entity is currently holding in its main hand.
operator.operators.integrateddynamics.entity.helditemoffhand.name=Held Item Offhand
operator.operators.integrateddynamics.entity.helditemoffhand.info=The item the given entity is currently holding in its off hand.
operator.operators.integrateddynamics.entity.mounted.name=Mounted Entities
operator.operators.integrateddynamics.entity.mounted.info=The entities that are currently mounted on the given entity.
operator.operators.integrateddynamics.entity.itemframecontents.name=Item Frame Contents
operator.operators.integrateddynamics.entity.itemframecontents.info=The contents from the given Item Frame.
operator.operators.integrateddynamics.entity.itemframerotation.name=Item Frame Rotation
operator.operators.integrateddynamics.entity.itemframerotation.info=The rotation from the given Item Frame.
operator.operators.integrateddynamics.entity.hurtsound.name=Entity Hurt Sound
operator.operators.integrateddynamics.entity.hurtsound.info=The hurt sound of the given entity.
operator.operators.integrateddynamics.entity.deathsound.name=Entity Death Sound
operator.operators.integrateddynamics.entity.deathsound.info=The death sound of the given entity.
operator.operators.integrateddynamics.entity.age.name=Entity Age
operator.operators.integrateddynamics.entity.age.info=The age of the given entity.
operator.operators.integrateddynamics.entity.ischild.name=Entity Is Child
operator.operators.integrateddynamics.entity.ischild.info=If the given entity is a child.
operator.operators.integrateddynamics.entity.canbreed.name=Entity Can Breed
operator.operators.integrateddynamics.entity.canbreed.info=If the given entity is ready to be bred.
operator.operators.integrateddynamics.entity.isinlove.name=Entity Is In Love
operator.operators.integrateddynamics.entity.isinlove.info=If the given entity is in love and is ready to breed.
operator.operators.integrateddynamics.entity.canbreedwith.name=Entity Can Breed With
operator.operators.integrateddynamics.entity.canbreedwith.info=If the given entity can be breed using the given item.
operator.operators.integrateddynamics.entity.isshearable.name=Entity Is Shearable
operator.operators.integrateddynamics.entity.isshearable.info=If the given entity is shearable
operator.operators.integrateddynamics.entity.nbt.name=Entity NBT
operator.operators.integrateddynamics.entity.nbt.info=Get the given entity as NBT.
operator.operators.integrateddynamics.entity.entitytype.name=Entity Type
operator.operators.integrateddynamics.entity.entitytype.info=The entity type name.
operator.operators.integrateddynamics.entity.entityitems.name=Entity Items
operator.operators.integrateddynamics.entity.entityitems.info=The items that are contained within this entity.
operator.operators.integrateddynamics.entity.entityfluids.name=Entity Fluids
operator.operators.integrateddynamics.entity.entityfluids.info=The fluids that are contained within this entity.
operator.operators.integrateddynamics.entity.entityenergystored.name=Entity Energy Stored
operator.operators.integrateddynamics.entity.entityenergystored.info=The amount of energy that is stored in this entity.
operator.operators.integrateddynamics.entity.entityenergycapacity.name=Entity Energy Capacity
operator.operators.integrateddynamics.entity.entityenergycapacity.info=The energy capacity of this entity.

operator.operators.integrateddynamics.itemstack.isfecontainer.name=Is FE Container
operator.operators.integrateddynamics.itemstack.isfecontainer.info=If the given item can hold FE
operator.operators.integrateddynamics.itemstack.storedfe.name=FE Stored
operator.operators.integrateddynamics.itemstack.storedfe.info=The amount of FE stored in this item
operator.operators.integrateddynamics.itemstack.fecapacity.name=FE Capacity
operator.operators.integrateddynamics.itemstack.fecapacity.info=The maximum amount of FE that can be stored in this item

operator.operators.integrateddynamics.fluidstack.name=Fluid
operator.operators.integrateddynamics.fluidstack.basename=Fluid %s
operator.operators.integrateddynamics.fluidstack.amount.name=Amount
operator.operators.integrateddynamics.fluidstack.amount.info=The amount of mB
operator.operators.integrateddynamics.fluidstack.block.name=Block
operator.operators.integrateddynamics.fluidstack.block.info=The block of the fluid
operator.operators.integrateddynamics.fluidstack.luminosity.name=Luminosity
operator.operators.integrateddynamics.fluidstack.luminosity.info=The fluid luminosity
operator.operators.integrateddynamics.fluidstack.density.name=Density
operator.operators.integrateddynamics.fluidstack.density.info=The fluid density
operator.operators.integrateddynamics.fluidstack.viscosity.name=Viscosity
operator.operators.integrateddynamics.fluidstack.viscosity.info=The fluid viscosity
operator.operators.integrateddynamics.fluidstack.isgaseous.name=Is Gaseous
operator.operators.integrateddynamics.fluidstack.isgaseous.info=If the fluid is gaseous
operator.operators.integrateddynamics.fluidstack.rarity.name=Rarity
operator.operators.integrateddynamics.fluidstack.rarity.info=The fluid rarity
operator.operators.integrateddynamics.fluidstack.israwfluidequal.name=Raw fluid equals
operator.operators.integrateddynamics.fluidstack.israwfluidequal.info=If the raw fluids are equal
operator.operators.integrateddynamics.fluidstack.mod.name=Mod
operator.operators.integrateddynamics.fluidstack.mod.info=The name of the mod owning the given fluid
operator.operators.integrateddynamics.fluidstack.nbt.name=Fluid NBT
operator.operators.integrateddynamics.fluidstack.nbt.info=Get the NBT tag of the given fluid.

operator.operators.integrateddynamics.nbt.name=NBT
operator.operators.integrateddynamics.nbt.basename=NBT %s
operator.operators.integrateddynamics.nbt.size.name=NBT Size
operator.operators.integrateddynamics.nbt.size.info=The number of entries inside the given NBT tag
operator.operators.integrateddynamics.nbt.keys.name=NBT Keys
operator.operators.integrateddynamics.nbt.keys.info=The list of keys inside the given NBT tag
operator.operators.integrateddynamics.nbt.haskey.name=NBT Has Key
operator.operators.integrateddynamics.nbt.haskey.info=If the given NBT tag contains the given key
operator.operators.integrateddynamics.nbt.type.name=NBT Entry Type
operator.operators.integrateddynamics.nbt.type.info=The value type in the given NBT tag corresponding to the given key
operator.operators.integrateddynamics.nbt.valueBoolean.name=NBT Value Boolean
operator.operators.integrateddynamics.nbt.valueBoolean.info=The Boolean value in the given NBT tag with the given key
operator.operators.integrateddynamics.nbt.valueInteger.name=NBT Value Integer
operator.operators.integrateddynamics.nbt.valueInteger.info=The Integer value in the given NBT tag with the given key
operator.operators.integrateddynamics.nbt.valueLong.name=NBT Value Long
operator.operators.integrateddynamics.nbt.valueLong.info=The Long value in the given NBT tag with the given key
operator.operators.integrateddynamics.nbt.valueDouble.name=NBT Value Double
operator.operators.integrateddynamics.nbt.valueDouble.info=The Double value in the given NBT tag with the given key
operator.operators.integrateddynamics.nbt.valueString.name=NBT Value String
operator.operators.integrateddynamics.nbt.valueString.info=The String value in the given NBT tag with the given key
operator.operators.integrateddynamics.nbt.valueTag.name=NBT Value NBT
operator.operators.integrateddynamics.nbt.valueTag.info=The NBT value in the given NBT tag with the given key
operator.operators.integrateddynamics.nbt.valueListTag.name=NBT Value List NBT
operator.operators.integrateddynamics.nbt.valueListTag.info=The NBT list value in the given NBT tag with the given key
operator.operators.integrateddynamics.nbt.valueListByte.name=NBT Value Byte Array
operator.operators.integrateddynamics.nbt.valueListByte.info=The byte array in the given NBT tag with the given key as Integer List
operator.operators.integrateddynamics.nbt.valueListInt.name=NBT Value Int Array
operator.operators.integrateddynamics.nbt.valueListInt.info=The int array in the given NBT tag with the given key as Integer List
operator.operators.integrateddynamics.nbt.without.name=NBT Without
operator.operators.integrateddynamics.nbt.without.info=Get a copy of the given NBT tag without the given key
operator.operators.integrateddynamics.nbt.withBoolean.name=NBT With Boolean
operator.operators.integrateddynamics.nbt.withBoolean.info=Get a copy of the given NBT tag with the given Boolean entry
operator.operators.integrateddynamics.nbt.withShort.name=NBT With Short
operator.operators.integrateddynamics.nbt.withShort.info=Get a copy of the given NBT tag with the given Integer as a short entry
operator.operators.integrateddynamics.nbt.withInteger.name=NBT With Integer
operator.operators.integrateddynamics.nbt.withInteger.info=Get a copy of the given NBT tag with the given Integer entry
operator.operators.integrateddynamics.nbt.withLong.name=NBT With Long
operator.operators.integrateddynamics.nbt.withLong.info=Get a copy of the given NBT tag with the given Long entry
operator.operators.integrateddynamics.nbt.withDouble.name=NBT With Double
operator.operators.integrateddynamics.nbt.withDouble.info=Get a copy of the given NBT tag with the given Double entry
operator.operators.integrateddynamics.nbt.withFloat.name=NBT With Float
operator.operators.integrateddynamics.nbt.withFloat.info=Get a copy of the given NBT tag with the given Double as a float entry
operator.operators.integrateddynamics.nbt.withString.name=NBT With String
operator.operators.integrateddynamics.nbt.withString.info=Get a copy of the given NBT tag with the given String entry
operator.operators.integrateddynamics.nbt.withTag.name=NBT With NBT
operator.operators.integrateddynamics.nbt.withTag.info=Get a copy of the given NBT tag with the given NBT entry
operator.operators.integrateddynamics.nbt.withListTag.name=NBT With NBT List
operator.operators.integrateddynamics.nbt.withListTag.info=Get a copy of the given NBT tag with the given NBT NBT list entry
operator.operators.integrateddynamics.nbt.withListByte.name=NBT With Byte List
operator.operators.integrateddynamics.nbt.withListByte.info=Get a copy of the given NBT tag with the given Integer List as an NBT Byte list entry
operator.operators.integrateddynamics.nbt.withListInt.name=NBT With Int List
operator.operators.integrateddynamics.nbt.withListInt.info=Get a copy of the given NBT tag with the given NBT Integer list entry
operator.operators.integrateddynamics.nbt.withListLong.name=NBT With Long List
operator.operators.integrateddynamics.nbt.withListLong.info=Get a copy of the given NBT tag with the given NBT Long list entry
operator.operators.integrateddynamics.nbt.subset.name=NBT Subset
operator.operators.integrateddynamics.nbt.subset.info=If the first NBT tag is a subset of, or equal to the second NBT tag. This will recursively check nested tags.
operator.operators.integrateddynamics.nbt.union.name=NBT Union
operator.operators.integrateddynamics.nbt.union.info=The union of the given NBT tags. Nested tags will be joined recusively.
operator.operators.integrateddynamics.nbt.intersection.name=NBT Intersection
operator.operators.integrateddynamics.nbt.intersection.info=The intersection of the given NBT tags. Nested tags will be intersected recusively.
operator.operators.integrateddynamics.nbt.minus.name=NBT Minus
operator.operators.integrateddynamics.nbt.minus.info=The difference of the given NBT tags. Nested tags will be subtracted recusively.

operator.operators.integrateddynamics.operator.name=Operator
operator.operators.integrateddynamics.operator.basename=Operator %s
operator.operators.integrateddynamics.operator.apply.name=Apply
operator.operators.integrateddynamics.operator.apply.info=Apply for a given operator a given value.
operator.operators.integrateddynamics.operator.apply2.name=Apply 2
operator.operators.integrateddynamics.operator.apply2.info=Apply for a given operator the given two values.
operator.operators.integrateddynamics.operator.apply3.name=Apply 3
operator.operators.integrateddynamics.operator.apply3.info=Apply for a given operator the given three value.
operator.operators.integrateddynamics.operator.map.name=Map
operator.operators.integrateddynamics.operator.map.info=Apply the given operator on all elements of a list, resulting in a new list of mapped values.
operator.operators.integrateddynamics.operator.filter.name=Filter
operator.operators.integrateddynamics.operator.filter.info=Filter a list of elements by matching them all with the given predicate.
operator.operators.integrateddynamics.operator.conjunction.name=Conjunction
operator.operators.integrateddynamics.operator.conjunction.info=Takes the conjunction of two predicates.
operator.operators.integrateddynamics.virtual.p_conjunction.name=Conjunction
operator.operators.integrateddynamics.operator.disjunction.name=Disjunction
operator.operators.integrateddynamics.operator.disjunction.info=Takes the disjunction of two predicates.
operator.operators.integrateddynamics.virtual.p_disjunction.name=Disjunction
operator.operators.integrateddynamics.operator.negation.name=Negation
operator.operators.integrateddynamics.operator.negation.info=Takes the negation of a predicate.
operator.operators.integrateddynamics.virtual.p_negation.name=Negated
operator.operators.integrateddynamics.operator.pipe.name=Pipe
operator.operators.integrateddynamics.operator.pipe.info=Create a new operator that pipes the output from the first operator to the second operator.
operator.operators.integrateddynamics.virtual.piped.name=Piped
operator.operators.integrateddynamics.operator.pipe2.name=Pipe 2
operator.operators.integrateddynamics.operator.pipe2.info=Create a new operator that gives its input to the first and second operators, and pipes the outputs from both of them to the third operator.
operator.operators.integrateddynamics.virtual.piped2.name=Piped 2
operator.operators.integrateddynamics.operator.flip.name=Flip
operator.operators.integrateddynamics.operator.flip.info=Flip the two first input parameters of an operator.
operator.operators.integrateddynamics.virtual.flipped.name=Flipped
operator.operators.integrateddynamics.operator.reduce.name=Reduce
operator.operators.integrateddynamics.operator.reduce.info=Apply the given operator on all elements of a list to reduce the list to one value.
operator.operators.integrateddynamics.operator.reduce1.name=Reduce 1
operator.operators.integrateddynamics.operator.reduce1.info=Apply the given operator on all elements of a list to reduce the list to one value. reduce1(op, list) is equivalent to reduce(op, tail(list), head(list)).
operator.operators.integrateddynamics.operator.byName.name=Operator By Name
operator.operators.integrateddynamics.operator.byName.info=Get the operator that has the given unique name.
operator.operators.integrateddynamics.virtual.recipeoutputbyinput.name=Recipe Output By Input
operator.operators.integrateddynamics.virtual.recipeinputsbyoutput.name=Recipe Inputs By Output
operator.operators.integrateddynamics.virtual.recipesbyinput.name=Recipes By Input
operator.operators.integrateddynamics.virtual.recipesbyoutput.name=Recipes By Output

operator.operators.integrateddynamics.ingredients.name=Ingredients
operator.operators.integrateddynamics.ingredients.basename=Ingredients %s
operator.operators.integrateddynamics.ingredients.items.name=Ingredient items
operator.operators.integrateddynamics.ingredients.items.info=The list of items
operator.operators.integrateddynamics.ingredients.fluids.name=Ingredient fluids
operator.operators.integrateddynamics.ingredients.fluids.info=The list of fluids
operator.operators.integrateddynamics.ingredients.energies.name=Ingredient energy elements
operator.operators.integrateddynamics.ingredients.energies.info=The list of energy elements
operator.operators.integrateddynamics.ingredients.withItem.name=Ingredients With Item
operator.operators.integrateddynamics.ingredients.withItem.info=Get a copy of the given ingredients with the given item at the given ingredient position
operator.operators.integrateddynamics.ingredients.withFluid.name=Ingredients With Fluid
operator.operators.integrateddynamics.ingredients.withFluid.info=Get a copy of the given ingredients with the given fluid at the given ingredient position
operator.operators.integrateddynamics.ingredients.withEnergy.name=Ingredients With Energy
operator.operators.integrateddynamics.ingredients.withEnergy.info=Get a copy of the given ingredients with the given energy at the given ingredient position
operator.operators.integrateddynamics.ingredients.withItems.name=Ingredients With Items
operator.operators.integrateddynamics.ingredients.withItems.info=Get a copy of the given ingredients with the given list of items at the given ingredient position
operator.operators.integrateddynamics.ingredients.withFluids.name=Ingredients With Fluids
operator.operators.integrateddynamics.ingredients.withFluids.info=Get a copy of the given ingredients with the given list of fluids at the given ingredient position
operator.operators.integrateddynamics.ingredients.withEnergies.name=Ingredients With Energy Elements
operator.operators.integrateddynamics.ingredients.withEnergies.info=Get a copy of the given ingredients with the given list of energy elements at the given ingredient position

operator.operators.integrateddynamics.recipe.name=Recipe
operator.operators.integrateddynamics.recipe.basename=Recipe %s
operator.operators.integrateddynamics.recipe.input.name=Recipe Input Ingredients
operator.operators.integrateddynamics.recipe.input.info=The input ingredients of the given recipe
operator.operators.integrateddynamics.recipe.output.name=Recipe Output Ingredients
operator.operators.integrateddynamics.recipe.output.info=The output ingredients of the given recipe
operator.operators.integrateddynamics.recipe.withInput.name=Recipe With Input Ingredients
operator.operators.integrateddynamics.recipe.withInput.info=Get a copy of the given recipe with the given ingredients as input
operator.operators.integrateddynamics.recipe.withOutput.name=Recipe With Output Ingredients
operator.operators.integrateddynamics.recipe.withOutput.info=Get a copy of the given recipe with the given ingredients as input
operator.operators.integrateddynamics.recipe.withInputOutput.name=Recipe With Input and Output Ingredients
operator.operators.integrateddynamics.recipe.withInputOutput.info=Create a recipe with the first ingredients as input, and the second ingredients as output

operator.operators.integrateddynamics.general.name=General
operator.operators.integrateddynamics.general.basename=General %s
operator.operators.integrateddynamics.general.choice.name=Choice
operator.operators.integrateddynamics.general.choice.info=If the first value is true, the second value is taken, otherwise the third value.\nType two and three must be equal.
operator.operators.integrateddynamics.general.identity.name=Identity
operator.operators.integrateddynamics.general.identity.info=A copy of the input value.
operator.operators.integrateddynamics.general.constant.name=Constant
operator.operators.integrateddynamics.general.constant.info=A copy of the first input value.
operator.operators.integrateddynamics.general.isnull.name=Is Null
operator.operators.integrateddynamics.general.isnull.info=If the given value is null
operator.operators.integrateddynamics.general.isnotnull.name=Is Not Null
operator.operators.integrateddynamics.general.isnotnull.info=If the given value is not null

operator.operators.integrateddynamics.virtual.name=Virtual Operator
operator.operators.integrateddynamics.virtual.basename=Virtual %s
operator.operators.integrateddynamics.virtual.p_conjunction.name=Predicate Conjunction
operator.operators.integrateddynamics.virtual.p_conjunction.info=The conjunction of two predicates
operator.operators.integrateddynamics.virtual.p_disjunction.name=Predicate Disjunction
operator.operators.integrateddynamics.virtual.p_disjunction.info=The disjunction of two predicates
operator.operators.integrateddynamics.virtual.p_negation.name=Predicate Negation
operator.operators.integrateddynamics.virtual.p_negation.info=The disjunction of a predicate
operator.operators.integrateddynamics.virtual.piped.name=Piped Operator
operator.operators.integrateddynamics.virtual.piped.info=A chain of operators

operator.operators.integrateddynamics.cast.name=Cast
operator.operators.integrateddynamics.cast.basename=Cast
operator.operators.integrateddynamics.cast.tooltip=Cast %s to %s

operator.operators.integrateddynamics.parse.name=Parse
operator.operators.integrateddynamics.parse.basename=Parse
operator.operators.integrateddynamics.parse.tooltip=Parse %s

## Config categories
config.integrateddynamics.item=Item settings
config.integrateddynamics.item.tooltip=Item settings
config.integrateddynamics.block=Block settings
config.integrateddynamics.block.tooltip=Block settings
config.integrateddynamics.fluid=Fluid settings
config.integrateddynamics.fluid.tooltip=Fluid settings
config.integrateddynamics.entity=Entity settings
config.integrateddynamics.entity.tooltip=Entity settings
config.integrateddynamics.general=General settings
config.integrateddynamics.general.tooltip=General settings
config.integrateddynamics.worldgeneration=World generation settings
config.integrateddynamics.worldgeneration.tooltip=World generation settings
config.integrateddynamics.enchantment=Enchantment settings
config.integrateddynamics.enchantment.tooltip=Enchantment settings
config.integrateddynamics.mob=Mob settings
config.integrateddynamics.mob.tooltip=Mob settings
config.integrateddynamics.biome=Biome generation settings
config.integrateddynamics.biome.tooltip=Biome generation settings
config.integrateddynamics.machine=Machine settings
config.integrateddynamics.machine.tooltip=Machine settings
config.integrateddynamics.potion=Potion settings
config.integrateddynamics.potion.tooltip=Potion settings
config.integrateddynamics.core=Core settings
config.integrateddynamics.core.tooltip=Core settings
config.integrateddynamics.modcompat=Mod compatibility settings
config.integrateddynamics.modcompat.tooltip=Mod compatibility settings
config.integrateddynamics.capability=Capability settings
config.integrateddynamics.capability.tooltip=Capability settings

# Configuration
config.integrateddynamics=%s configuration

## Biome settings
config.integrateddynamics.biome_meneglin=Meneglin biome
config.integrateddynamics.biome_meneglin.spawnWeight=Meneglin biome Spawn Weight

## Block settings
config.integrateddynamics.menrilLeaves.berriesDropChance=Berries drop chance

## Capability settings
capability.integrateddynamics.cableFakeable=Fake cables
capability.integrateddynamics.dynamicLight=Dynamic lighting
capability.integrateddynamics.dynamicRedstone=Dynamic redstone
capability.integrateddynamics.energyNetwork=Energy network
capability.integrateddynamics.facadeable=Facades
capability.integrateddynamics.networkCarrier=Network carrier
capability.integrateddynamics.networkElementProvider=Network element provider
capability.integrateddynamics.partContainer=Part containers
capability.integrateddynamics.partNetwork=Part network
capability.integrateddynamics.pathElementProvider=Path element provider
capability.integrateddynamics.variableContainer=Variable container
capability.integrateddynamics.variableFacadeHolder=Variable facade holder

## Core settings
config.integrateddynamics.general.analytics=Send anonymous analytics
config.integrateddynamics.general.cacheCableModels=Cache cable models
config.integrateddynamics.general.versionChecker=Version check

## General settings
config.integrateddynamics.general.energyConsumptionMultiplier=Energy consumption multiplier
config.integrateddynamics.general.partOverlayRenderdistance=Part overlay render distance

## Item settings
config.integrateddynamics.variable=Variable Card
config.integrateddynamics.variableTransformer=Variable Transformer
config.integrateddynamics.menrilBerries.nightVision=Menril Berry night vision
config.integrateddynamics.on_the_dynamics_of_integration.bookRewards=Book item rewards

## Machine settings
config.integrateddynamics.energyBattery.capacity=Battery Capacity
config.integrateddynamics.energyBattery.energyPerTick=Energy per Tick
config.integrateddynamics.general.defaultPartUpdateFreq=Part update frequency

## Mod compatibility settings
config.integrateddynamics.charsetpipes=Charset Pipes
config.integrateddynamics.cofhapi=RF API
config.integrateddynamics.jei=JEI
config.integrateddynamics.forestry=Forestry recipes
config.integrateddynamics.mcmultipart=MCMultiPart support
config.integrateddynamics.refinedstorage=Refined Storage
config.integrateddynamics.tconstruct=Tinkers' Construct
config.integrateddynamics.tesla=Tesla
config.integrateddynamics.theoneprobe=The One Probe
config.integrateddynamics.Waila=Waila

## World generation settings
config.integrateddynamics.general.wildMenrilTreeChance=Wild Menril tree spawn chance
config.integrateddynamics.menrilLogFilled.filledMenrilLogChance=Enriched Menril Wood spawn chance

# ------ On the Dynamics of Integration contents ------

info_book.integrateddynamics.section.main=On the Dynamics of Integration
info_book.integrateddynamics.tag_index=&oIndex&r

info_book.integrateddynamics.introduction=Introduction
info_book.integrateddynamics.introduction.text1=For too long, automation possibilities have been too limited. &1Integrated Dynamics&0 aims to be the go-to mod for automating your logic systems. It does this by providing an expressive immersive logic programming experience with hooks and support for most elements of &lMinecraft&r and its modifications.
info_book.integrateddynamics.introduction.text2=Redstone circuits have always been a very basic, but workable and easily understandable method for automation. The basicness of redstone is however also an inconvenience. For automation networks with higher complexities, redstone circuits can become very large and consequently also difficult to manage. Furthermore, one small water-leak can cause major headaches to every redstoner.
info_book.integrateddynamics.introduction.text3=The goal of this book is twofold. First, a &ltutorial&r is provided for learning the most important concepts behind this mod. Secondly, a detailed &lmanual&r of all elements and mechanisms are explained for players that are not not interested in the tutorial.
info_book.integrateddynamics.introduction.text4=You can navigate through this book by clicking on the arrows at the bottom, shift clicking will flip through whole sections instead of single pages. At the start of large sections you will see a content table which will contain hyperlinks to its subsections for faster browsing. When you come across recipes, the items that are explained in this book are clickable as a fast reference to the section they are explained in. You will also notice a button at the top left of this book, which will take you to the section above your current one. The button at the top right corner will go back to the previously visited page each time when clicked.

info_book.integrateddynamics.tutorials=Tutorials

info_book.integrateddynamics.tutorials.introduction=Introduction
info_book.integrateddynamics.tutorials.introduction.text1=This part of the book contains several tutorials that will help you understand the basics of the mod. Furthermore, it will allow you to earn some &lrewards&r while accomplishing the achievements of each tutorial.

info_book.integrateddynamics.tutorials.menrilBasics=Menril Basics
info_book.integrateddynamics.tutorials.menrilBasics.text1=To get started with this mod, you will need to find some &lMenril Trees&r which can most easily be found in &lMeneglin Biomes&r.
info_book.integrateddynamics.tutorials.menrilBasics.text2=After that, you’ll need to craft a &lSqueezer&r and &lDrying Basin&r for processing &lMenril Wood&r. This can be done by placing a block of wood in the &lSqueezer&r and jumping on it until it's flat. Once that has been done, the &lMenril Resin&r will try to go to the two sides of the &lSqueezer&r. Next, place a &lDrying Basin&r next to the &lSqueezer&r to make it fill with the &lMenril Resin&r you just squeezed.
info_book.integrateddynamics.tutorials.menrilBasics.text3=If you want to repeat the process, you can reset the &lSqueezer&r by applying a redstone pulse.
info_book.integrateddynamics.tutorials.menrilBasics.text4=In the future, you will also be able to craft upgraded variants of these machines that are more easily automatable, but are more costly: the &lMechanical Squeezer&r and the &lMechanical Drying Basin&r.

info_book.integrateddynamics.tutorials.networkFoundations=Network Foundations
info_book.integrateddynamics.tutorials.networkFoundations.text1=The main goal of this mod is for building control networks for automation. This is done using &lLogic Cables&r. Try making a network with ten of those cables.
info_book.integrateddynamics.tutorials.networkFoundations.text2=The next step will be to craft some &lVariable Cards&r and &lVariable Transformers&r. &lVariable Cards&r are used to store references to values in the network. &lVariable Transformers&r are crafting elements for components that can be placed on &lLogic Cables&r for reading and writing these values.

info_book.integrateddynamics.tutorials.basicNetworkComponents=Basic Network Components
info_book.integrateddynamics.tutorials.basicNetworkComponents.text1=One of the methods for binding &lVariable Cards&r to certain values, is by reading in values from &lReaders&r. Let’s start by crafting some basic readers. After that, craft a &lDisplay Panel&r, which is useful for displaying the values of &lVariable Cards&r.

info_book.integrateddynamics.tutorials.aspects=Aspects
info_book.integrateddynamics.tutorials.aspects.text1=As a simple example, let’s try reading in a redstone value and displaying it.
info_book.integrateddynamics.tutorials.aspects.text2=Do this by attaching a &lRedstone Reader&r to a &lLogic Cable&r in the world. Make sure that the reading is targeting something with a redstone value, like a &lRedstone Torch&r.
info_book.integrateddynamics.tutorials.aspects.text3=After that, right-click on the &lRedstone Reader&r to open the gui, after which you have to insert a &lVariable Card&r into the &6Integer&0 &lRedstone Value&r aspect, to bind the target’s redstone value to that &lVariable Card&r.
info_book.integrateddynamics.tutorials.aspects.text4=Next, place a &lDisplay Panel&r in the same network as the &lRedstone Reader&r, and insert your bound &lVariable Card&r to display it value.
info_book.integrateddynamics.tutorials.aspects.text5=As a next step, craft a &lRedstone Writer&r and let it write a maximal integer redstone value that was read by a Redstone Reader.

info_book.integrateddynamics.tutorials.logicOperations=Logic Operations
info_book.integrateddynamics.tutorials.logicOperations.text1=While displaying values that originate from readers can be useful, things get really interesting when you start combining certain values with other values using &2Operators&0. All &2Operators&0 can be found in the &lLogic Programmer&r.
info_book.integrateddynamics.tutorials.logicOperations.text2=Start by crafting a &lLogic Programmer&r, which exists in both item and block-form. Open its gui to see the list of all &loperators&r.
info_book.integrateddynamics.tutorials.logicOperations.text3=Next, search for the &6Integer&0 operator, and click on it. This will open a window in which you should type a number. When you have done this, insert an empty &lVariable Card&r to bind that &6Integer&0 to the &lVariable Card&r. When you’re done, do that once more for another &6Integer&0.
info_book.integrateddynamics.tutorials.logicOperations.text4=Finally, search for the &lAddition&r operator and open it. This allows you to add two &eNumbers&0. Insert your two &6Integer&0 &lVariable Cards&r into these slots, and bind it to a new &lVariable Card&r.
info_book.integrateddynamics.tutorials.logicOperations.text5=As &1Integrated Dynamics&0 evaluates variables in a &olazy&r manner, this &lAddition&r &lVariable Card&r does not contain the addition of these &6Integers&0 directly, but the addition will only be performed when the value is needed in the network, based on the variable references. For this, the network has to be able to find these referenced &lVariable Card&r. For this, you will need to craft and place a &lVariable Store&r. Insert the two &6Integer&0 &lVariable Cards&r into this store to make them available to the network.
info_book.integrateddynamics.tutorials.logicOperations.text6=Finally, you can now connect a cable to the &lVariable Store&r, attach a &lDisplay Panel&r, and insert the &lAddition&r &lVariable Card&r to display the addition.
info_book.integrateddynamics.tutorials.logicOperations.text7=The &lLogic Programmer&r and &lVariable Stores&r are going to be your best friends when you want to do more complex automation.

info_book.integrateddynamics.tutorials.recipe_handling=Recipe Handling
info_book.integrateddynamics.tutorials.recipe_handling.text1=&oRecipes&r are a big part of &lMinecraft&r. That is why this mod offers first-class support for them via &8Recipe&0 values, and &lIngredients&r values to represent their input and output collections. In this tutorial, we will have a look at how recipes can be obtained and used.
info_book.integrateddynamics.tutorials.recipe_handling.text2=The easiest way to obtain &8Recipes&0 is simply by reading it from a machine that can handle recipes. So let's start by reading all crafting recipes by placing a &lMachine Reader&r against a &lCrafting Table&r and reading the list of recipes.
info_book.integrateddynamics.tutorials.recipe_handling.text3=If you want some more find-grained control over recipes, or if you are working with a machine that does not expose its recipes via the &lMachine Reader&r, you can visually create a &8Recipe&0 yourself in the &lLogic Programmer&r. Let's try creating a simple recipe, for example for crafting a &lChest&r.
info_book.integrateddynamics.tutorials.recipe_handling.text4=In this last part of the tutorial, we'll take recipe reading one step further. Using the &lRecipe By Output&r aspect, we can retrieve an operator that, when applied to an &8Ingredients&0 instance, will return the first &8Recipe&0 that returns the given &8Ingredients&0 as output. We will use this to look up the recipe of a &lChest&r.
info_book.integrateddynamics.tutorials.recipe_handling.text5=Let's start by creating an &8Ingredients&0 instance with a single &8Chest&0 in your &lLogic Programmer&r. Next, read the &lRecipe By Output&r aspect from a &lMachine Reader&r that targets a &lCrafting Table&r. After that, use the &oApply&r operator to apply your &lChest&r &8Ingredient&0 to the operator you got from the &lMachine Reader&r. Finally, insert the resulting variable into a &lDisplay Panel&r to see the &lChest&r's recipe. (Don't forget to insert all your used variables into a &lVariable Store&r).
info_book.integrateddynamics.tutorials.recipe_handling.text6=Obviously, there is much more you can do with &8Recipes&0 and &8Ingredients&0. Have a look in the &lMachine Reader&r and &lLogic Programmer&r to find out what other advanced functionality is available to you.

info_book.integrateddynamics.tutorials.advancedNetworkComponents=Advanced Network Components
info_book.integrateddynamics.tutorials.advancedNetworkComponents.text1=Now that you are familiar with basic logic, we can have a look at the more advanced network components: the &lMaterializer&r and the &lProxy&r.
info_book.integrateddynamics.tutorials.advancedNetworkComponents.text2=As you may remember, the &lLogic Programmer&r allows you to create variables with &ostatic&r values, or you can create more complex variables based on &odynamic&r value evaluation.
info_book.integrateddynamics.tutorials.advancedNetworkComponents.text3=The &lMaterializer&r can be used for converting a &odynamic&r value to a &ostatic&r one. This can be done by inserting the &odynamic&r &lVariable Card&r in the top slot of the &lMaterializer&r. Every &lVariable Card&r that is inserted into the left slot, will be set with the value the top variable has at that moment.
info_book.integrateddynamics.tutorials.advancedNetworkComponents.text4=The &lProxy&r allows you to add an extra level of indirection for your variables. You may for example have a logic program that requires a &ostatic&r value in there. If at any point in the future, you want to change that value, you would have to rewrite your program, unless that value was &oproxied&r, in which case you would simply have to update the value in the &lProxy&r.
info_book.integrateddynamics.tutorials.advancedNetworkComponents.text5=For this tutorial, create materialized and proxied &lVariable Cards&r.

info_book.integrateddynamics.tutorials.advancedOperations=Advanced Operations
info_book.integrateddynamics.tutorials.advancedOperations.text1=As you may have noticed during the last tutorial, the &lLogic Programmer&r allows you to do way more than just adding numbers. In this tutorial, we’ll look into the more advanced datastructures and chaining of operators.
info_book.integrateddynamics.tutorials.advancedOperations.text2=Let’s start by creating a static &7List&0 of the &6Integers&0 &61&0, &610&0 and &6100&0, and visualize it in a &lDisplay Panel&r.
info_book.integrateddynamics.tutorials.advancedOperations.text3=&7Items&0 are one of the possible value types in this mod. Let’s make a static &7Item&0 &lVariable Card&r, dynamically retrieve the mod name from that item, and visualize it in a &lDisplay Panel&r.
info_book.integrateddynamics.tutorials.advancedOperations.text4=Remember that you’ll have to use a &lVariable Store&r to store your referenced variable.
info_book.integrateddynamics.tutorials.advancedOperations.text5=For the final, part of this tutorial, we’ll combine dynamic variables with operators. Attach an &lEntity Reader&r to a network, read the target &7Entity&0, retrieve the &7Block&0 the target &7Entity&0 is looking at, and visualize that &7Block&0 in a &lDisplay Panel&r.

info_book.integrateddynamics.tutorials.theValueOfOperators=The Value of Operators
info_book.integrateddynamics.tutorials.theValueOfOperators.text1=In &1Integrated Dynamics&0, &2Operators&0 are first-class citizens. Up until now, we have only used manually using the &lLogic Programmer&r, but in this tutorial, we’ll look into how they can be used in a more dynamic way, by storing &2Operators&0 in &lVariable Cards&r, and invoking them dynamically.
info_book.integrateddynamics.tutorials.theValueOfOperators.text2=As a first step, go to the &lLogic Programmer&r, and create a new static &2Operator&0, by starting to type &oArithmetic Addition&r &2Operator&0 in the autocomplete dropdown-list and clicking it, and write it to a &lVariable Card&r. After that, create two &6Integer&0 variables. Next, find the &oApply&r operator, and apply the first &6Integer&0 to the &2Operator&0, which will &obind&r the first input argument of the addition &2Operator&0 to that &6Integer&0, and will output a new &2Operator&0 with one remaining input argument. Next, use the &oApply&r operator again to &obind&r the final input argument of the newly created &2Operator&0. Finally, use a &lDisplay Panel&r to visualize your dynamically invoked addition.
info_book.integrateddynamics.tutorials.theValueOfOperators.text3=Next to applying &2Operators&0, there are a lot of other advanced &2Operator&0 operations. We’ll now look into using &2Operators&0 on &7Lists&0, more specifically the &oFilter&r &2Operator&0 that takes a &7List&0 and a &oPredicate&r (an &2Operator&0 with one input argument and a &9Boolean&0 output value). Start by creating a &7List&0 of the &6Integers&0 &61&0, &610&0 and &6100&0. Next, store the &oRelational Equals&r &2Operator&0 in a variable. Next, apply this operator on the &6Integer&0 &610&0. Next, use the &oFilter&r &2Operator&0 with your &7List&0 and the applied &2Operator&0. This will filter away all the items from the &7List&0 that return &9False&0 by applying them on the given operator, which in this case means that all elements that are not equal to &610&0 will be removed from the list. Visualize the result in a &lDisplay Panel&r.
info_book.integrateddynamics.tutorials.theValueOfOperators.text4=There are plenty of other operations on &2Operators&0, such as combining &oPredicates&r, flipping &2Operator&0 arguments, and more operations on &7Lists&0.

info_book.integrateddynamics.tutorials.challenges=Challenges
info_book.integrateddynamics.tutorials.challenges.text1=This final tutorial section contains several non-trivial challenges to show that you understand the basics of &1Integrated Dynamics&0. No further information will be given for each challenge, so good luck!

info_book.integrateddynamics.manual=Manual

info_book.integrateddynamics.manual.introduction=Introduction
info_book.integrateddynamics.manual.introduction.text1=This part of the book contains detail descriptions of all parts of the mod.

info_book.integrateddynamics.manual.prerequisites=Prerequisites

info_book.integrateddynamics.manual.prerequisites.menril_trees=Menril Trees
info_book.integrateddynamics.manual.prerequisites.menril_trees.text1=You may occasionally encounter tall blue trees. Such trees are called &lMenril Trees&r, and have some very interesting properties. First, the leaves give off light. This is caused by the illuminating berries, which are also very tasty! Secondly, the nice-looking wood of the tree contains a lot of resin, which can be used for crafting most of the things in this mod.

info_book.integrateddynamics.manual.prerequisites.meneglin_biome=Meneglin Biome
info_book.integrateddynamics.manual.prerequisites.meneglin_biome.text1=&lMenril Trees&r are unfortunately quite hard to find. Luckily, there is one biome, the &lMeneglin Biome&r in which these trees thrive. The large amount of &lMenril Trees&r causes some things in this biome to become blue, which is because of the &lMenril Resin&r that is given off by these trees to the environment.

info_book.integrateddynamics.manual.prerequisites.squeezer=Squeezer
info_book.integrateddynamics.manual.prerequisites.squeezer.text1=The &lSqueezer&r is an early-game machine that allows you to jump on blocks and items to break or squeeze them. Not only players, but any kind of entity can jump or fall on it to perform the squeezing process. Resulting items will either fall into any adjacent inventory or on the ground. Resulting fluids will remain in the machine and will flow to one of the two sides when there is a target tank. The machine contains a small suspension that can enabled with a redstone pulse to reset it. Most notably, this machine can be used to squeeze the resin out of &lMenril Wood&r.

info_book.integrateddynamics.manual.prerequisites.drying_basin=Drying Basin
info_book.integrateddynamics.manual.prerequisites.drying_basin.text1=Drying out blocks and items can be done using the &lDrying Basin&r. This can for instance be useful when you want to let your &lMenril Resin&r dry into &lCrystalized Menril&r.
info_book.integrateddynamics.manual.prerequisites.drying_basin.text2=Whatever you do, don’t insert hot fluids!

info_book.integrateddynamics.manual.networks=Networks
info_book.integrateddynamics.manual.networks.text1=&lIntegrated Dynamics&r &lnetworks&r are the basis of any good automation system. A network consists of a collection of connected &lLogic Cables&r and parts can be placed on them. These cables should be managed using a &lWrench&r. Shift+right-clicking a cable or part will remove it, while a regular right-click will disconnect it from other cables.
info_book.integrateddynamics.manual.networks.text2=Even though &lLogic Cables&r may look nice, in some cases you’ll probably want to hide them. You can do this using &lFacades&r, which can be resemble any material. Furthermore, these cables are also compatible with &lMC MultiPart&r, which means that you can hide your cables in more complex facade structures.

info_book.integrateddynamics.manual.logic=Logic

info_book.integrateddynamics.manual.logic.value_types=Value Types

info_book.integrateddynamics.manual.logic.value_types.boolean=Boolean
info_book.integrateddynamics.manual.logic.value_types.boolean.text1=The simplest value type, its values can be either &9True&0 or &9False&0.
info_book.integrateddynamics.manual.logic.value_types.integer=Integer
info_book.integrateddynamics.manual.logic.value_types.integer.text1=A value type for representing positive and negative numbers. For example &6-20&0, &60&0, &61000&0, &6333&0, ...
info_book.integrateddynamics.manual.logic.value_types.integer.text2=The values can range between &6–2147483648&0 and &62147483647&0.
info_book.integrateddynamics.manual.logic.value_types.integer.text3=This value type is part of the &lNumber&r category.
info_book.integrateddynamics.manual.logic.value_types.double=Double
info_book.integrateddynamics.manual.logic.value_types.double.text1=Real numbers, which can also be positive or negative. For example &e3.1415&0, &e4815162342&0, &e3.33333333&0, ...
info_book.integrateddynamics.manual.logic.value_types.double.text2=This value type is part of the &lNumber&r category.
info_book.integrateddynamics.manual.logic.value_types.long=Long
info_book.integrateddynamics.manual.logic.value_types.long.text1=The same as &6Integers&0, but with a larger value range, which goes from &e-9223372036854775808&0 to &e9223372036854775807&0
info_book.integrateddynamics.manual.logic.value_types.long.text2=This value type is part of the &lNumber&r category.
info_book.integrateddynamics.manual.logic.value_types.string=String
info_book.integrateddynamics.manual.logic.value_types.string.text1=A sequence of characters, for example &4”aaa”&0, &4“Hi!”&0, &4“x!(àà)ç”&0, ...
info_book.integrateddynamics.manual.logic.value_types.list=List
info_book.integrateddynamics.manual.logic.value_types.list.text1=A list containing values of a certain &lValue Type&r. All elements in a certain can only contain values of the same value types. For example &8(0, 1, 2, 3)&0, &8(“a”, “b”, “c”)&0, &8(3,33, 1,14, 5, 6)&0
info_book.integrateddynamics.manual.logic.value_types.operator=Operator
info_book.integrateddynamics.manual.logic.value_types.operator.text1=A value containing a reference to an &2Operator&0. Operators can be partially applied for more flexible evaluations based on the concept of &lCurrying&r. This is part of the concept of &lmetaprogramming&r (look it up, it's a thing!), where operators are treated as data by other operators. This basically allows you to create new operators yourself, which can then be used for more complex operations.
info_book.integrateddynamics.manual.logic.value_types.operator.text2=You can for example store the addition &2Operator&0 in a variable card. Do this by starting to type the operator name and selecting it from the autocomplete dropdown-list and clicking it. You can then partially apply it with one &6Integer&0 &lVariable Card&r, which will result in a new virtual operator with one input type and one output type, which internally contains a reference to that applied &6Integer&0. Applying another &6Integer&0 will result in an &6Integer&0.
info_book.integrateddynamics.manual.logic.value_types.operator.text3=Other operations of &2Operators&0 are present in the &lLogic Programmer&r for more advanced evaluations, such as reducing a list to a single value, or filtering a list based on a &lPredicate&r.
info_book.integrateddynamics.manual.logic.value_types.nbt=NBT
info_book.integrateddynamics.manual.logic.value_types.nbt.text1=Certain things in &lMinecraft&r internally use the &3NBT&0 datastructure. An &3NBT&0 tag is a special kind of object that can hold multiple values of different types. For example the NBT representation of a &8Chest&0 containing all its items, the enchantment information of an &8Pickaxe&0, ...
info_book.integrateddynamics.manual.logic.value_types.nbt.text2=Variables can hold references to such &3NBT&0 tags, and corresponding operators exist to read or extend these tags.
info_book.integrateddynamics.manual.logic.value_types.nbt.text3=&3NBT&0 tags are typically used in this mod as a low-level fallback mechanism, in case you can not read certain information using dedicated operators.
info_book.integrateddynamics.manual.logic.value_types.block=Block
info_book.integrateddynamics.manual.logic.value_types.block.text1=A reference to a &lMinecraft&r block. For example &8Dirt&0, &8Cobblestone&0, &8Red Stained Clay&0, &8Chest&0, ....
info_book.integrateddynamics.manual.logic.value_types.item=Item
info_book.integrateddynamics.manual.logic.value_types.item.text1=A reference to a &lMinecraft&r item. For example &8Apple&0, &8Cobblestone&0, &8Diamond Pickaxe&0, &8Enchanted Sword&0, ....
info_book.integrateddynamics.manual.logic.value_types.entity=Entity
info_book.integrateddynamics.manual.logic.value_types.entity.text1=A reference to a certain &lMinecraft&r entity. For example &8Zombie&0, &8Cow&0, &8Player_abc&0 ....
info_book.integrateddynamics.manual.logic.value_types.fluid=Fluid
info_book.integrateddynamics.manual.logic.value_types.fluid.text1=A reference to a &lMinecraft&r fluid. For example &8Lava@1000mB&0, &8Water@3mB&0, &8Menril Resin@3030mB&0, ....
info_book.integrateddynamics.manual.logic.value_types.ingredients=Ingredients
info_book.integrateddynamics.manual.logic.value_types.ingredients.text1=A collection of &lItems&r, &lFluids&r and &lEnergy amounts&r (&6Integer&0). Its main use is for representing the input and output of &8Recipes&0.
info_book.integrateddynamics.manual.logic.value_types.recipe=Recipe
info_book.integrateddynamics.manual.logic.value_types.recipe.text1=An abstract crafting recipe, that takes &8Ingredients&0 as input and outputs another &8Ingredients&0 value.
info_book.integrateddynamics.manual.logic.value_types.recipe.text2=Recipes can be created visually using the &lLogic Programmer&r, or they can be read from (supported) machines using the &lMachine Reader&r.
info_book.integrateddynamics.manual.logic.value_types.recipe.text3=These recipes can be used for autocrafting mods such as &lIntegrated Crafting&r.

info_book.integrateddynamics.manual.logic.variables=Variables

info_book.integrateddynamics.manual.logic.variables.variable_card=Variable Card
info_book.integrateddynamics.manual.logic.variables.variable_card.text1=&lVariable Cards&r are the primary mode of logic transport in this mod. A variable contains a reference to a certain &lValue&r with a certain &lValue Type&r.
info_book.integrateddynamics.manual.logic.variables.variable_card.text2=Variables can either contain be either static or dynamic. Static variables are defined once, and will never change afterwards. Dynamic variables are the result of some form of &lLogic Evaluation&r, which are done by &lOperators&r or &lReader Aspects&r. An example of a dynamic variable is the time in the &lMinecraft&r world, which changes continuously.
info_book.integrateddynamics.manual.logic.variables.variable_card.text3=Dynamic variables will only be evaluated when their value is requested in some way, such as displaying the value in a &lDisplay Panel&r, or using it being requested as part of the evaluation of another dynamic variable.
info_book.integrateddynamics.manual.logic.variables.variable_card.text4=Each &lVariable Card&r has a unique ID, which is used internally in networks for &lLogic Evaluation&r. When an error occurs in the network, these ID’s will be shown to the player to help with debugging. For better usability, a label can be given to &lVariable Cards&r using a &lLabeler&r, which will allow players to see the label instead of the ID’s.

info_book.integrateddynamics.manual.logic.variables.variable_store=Variable Store
info_book.integrateddynamics.manual.logic.variables.variable_store.text1=Some dynamic variables are evaluated based on other variables, where access to those referenced variables must be possible. A dynamic variable representing the addition of two other variables must be able to access those two other variables when it is evaluated. Access to those other variables must be possible within the same network as where the dynamic variable is being evaluated, which can be done by placing the other variable cards in a &lVariable Store&r. Multiple &lVariable Stores&r can be present in a network. Those other variables may also reference certain variables, which should also be present in that same network.

info_book.integrateddynamics.manual.parts=Parts

info_book.integrateddynamics.manual.parts.introduction=Introduction
info_book.integrateddynamics.manual.parts.introduction.text1=Parts can be placed on each side of a &lLogic Cable&r. This section describes parts that can read &lValues&r and place them available as a &lVariable Card&r, and parts that can perform actions based on the &lValues&r within &lVariable Cards&r.
info_book.integrateddynamics.manual.parts.introduction.text2=Most parts have configurable settings, which can be accessed using the top-right button in the GUI of a part. This allows you to change the part &lTicks/Operation&r, meaning per how many ticks this part should perform its actions. Secondly, the &lPriority&r of part can be changed, which indicates the order in which this part can act relative to the other parts in the same network in the same tick. If part A has a priority of -1, and part B has a priority of 1, then part B will always perform its actions before part A. If priorities of parts are the same, then the relative order is random.
info_book.integrateddynamics.manual.parts.introduction.text3=A part's &lEnergy Channel&r determines where it can draw its energy from. -1 is the wildcard channel (it will match all channels), and 0 is the default channel (used by parts such as energy cells that don't have a channel setting). Finally, &lTarget Side&r determines which side of its target block will be interacted with. This defaults to the side that it's actually placed against.
info_book.integrateddynamics.manual.parts.introduction.text4=Some reader and writer parts only contain aspects when certain other mods are present. If no aspects are present for a certain part, a warning will be added to the item tooltip whenever you attempt to craft it.

info_book.integrateddynamics.manual.parts.reader=Readers
info_book.integrateddynamics.manual.parts.reader.introduction=Introduction
info_book.integrateddynamics.manual.parts.reader.introduction.text1=The simplest method for creating a dynamic variable is done using &lReaders&r. Different types of readers exist for reading information from the world as storing it inside a &lVariable Card&r. Each &lReader&r contains one or more &lAspects&r for reading different things with different &lValue Types&r.

info_book.integrateddynamics.manual.parts.reader.audio=Audio
info_book.integrateddynamics.manual.parts.reader.audio.text1=Information about music and audio that is playing in the enviroment.
info_book.integrateddynamics.manual.parts.reader.block=Block
info_book.integrateddynamics.manual.parts.reader.block.text1=Information about the block the part is facing.
info_book.integrateddynamics.manual.parts.reader.entity=Entity
info_book.integrateddynamics.manual.parts.reader.entity.text1=Information about the entity or entities that are inside the square that the part is facing.
info_book.integrateddynamics.manual.parts.reader.extra_dimensional=Extra-Dimensional
info_book.integrateddynamics.manual.parts.reader.extra_dimensional.text1=Information about the server, such as the list of online players.
info_book.integrateddynamics.manual.parts.reader.fluid=Fluid
info_book.integrateddynamics.manual.parts.reader.fluid.text1=Read values from the fluid tank this part is facing.
info_book.integrateddynamics.manual.parts.reader.inventory=Inventory
info_book.integrateddynamics.manual.parts.reader.inventory.text1=Read information from the facing inventory, like the amount of slots and items. This will not transfer items itself.
info_book.integrateddynamics.manual.parts.reader.machine=Machine
info_book.integrateddynamics.manual.parts.reader.machine.text1=The machine this part is facing can be read, such as the work they are doing.
info_book.integrateddynamics.manual.parts.reader.network=Network
info_book.integrateddynamics.manual.parts.reader.network.text1=Read information about the &lIntegrated Dynamics&r network this part is facing. This does not have to be the same network as the network this part is on.
info_book.integrateddynamics.manual.parts.reader.redstone=Redstone
info_book.integrateddynamics.manual.parts.reader.redstone.text1=Read redstone information from the facing block.
info_book.integrateddynamics.manual.parts.reader.world=World
info_book.integrateddynamics.manual.parts.reader.world.text1=Information about the world this part is in, like the current weather and time.

info_book.integrateddynamics.manual.parts.writer=Writers
info_book.integrateddynamics.manual.parts.writer.audio=Audio
info_book.integrateddynamics.manual.parts.writer.audio.text1=Play sounds and music.
info_book.integrateddynamics.manual.parts.writer.effect=Effect
info_book.integrateddynamics.manual.parts.writer.effect.text1=Emit particles based on certain values and settings.
info_book.integrateddynamics.manual.parts.writer.entity=Entity
info_book.integrateddynamics.manual.parts.writer.entity.text1=Configure and control entities.
info_book.integrateddynamics.manual.parts.writer.machine=Machine
info_book.integrateddynamics.manual.parts.writer.machine.text1=Configure and control machines.
info_book.integrateddynamics.manual.parts.writer.inventory=Inventory
info_book.integrateddynamics.manual.parts.writer.inventory.text1=Perform actions related to inventories and pipes. This will not transfer items itself.
info_book.integrateddynamics.manual.parts.writer.redstone=Redstone
info_book.integrateddynamics.manual.parts.writer.redstone.text1=Output a certain redstone level.

info_book.integrateddynamics.manual.parts.other=Others
info_book.integrateddynamics.manual.parts.other.light=Light
info_book.integrateddynamics.manual.parts.other.light.text1=A simple light that is either always on, or can be controlled using a &1Boolean&0 or &6Integer&0 &lVariable Card&r.
info_book.integrateddynamics.manual.parts.other.display=Display
info_book.integrateddynamics.manual.parts.other.display.text1=A useful monitoring or debugging tool that simply shows the value of a &lVariable Card&r. &lDisplays&r can be rotated by right-clicking with a &lWrench&r.
info_book.integrateddynamics.manual.parts.other.display.text2=Inside the gui, a &lCopy&r button is available to copy the currently displayed value to your clipboard so that it can be used outside of the game. You can also just use the default copy hotkey of your OS to copy this value.
info_book.integrateddynamics.manual.parts.other.connector_mono_directional=Mono-Directional Connector
info_book.integrateddynamics.manual.parts.other.connector_mono_directional.text1=Sometimes, your logic networks will span large distances. While regular cables will do the trick, it may not be very convenient to place cables across a long distance.
info_book.integrateddynamics.manual.parts.other.connector_mono_directional.text2=&lMono-Directional Connectors&r allow you to connect networks wirelessly over a long distance. This can be done by placing a first connector on one network, and a second connector on another network. These two connectors must be in a straight line to each other, with a distance less than or equal to 512 blocks. The connectors will appear active when a valid connection has been made.
info_book.integrateddynamics.manual.parts.other.connector_omni_directional=Omni-Directional Connector
info_book.integrateddynamics.manual.parts.other.connector_omni_directional.text1=While &lMono-Directional&r connectors are useful for long-distance connections in a single direction, in some cases this might be a bit too limited.
info_book.integrateddynamics.manual.parts.other.connector_omni_directional.text2=You may for example want to connect more than two networks together using a single connector or connect with networks in other dimensions. For these cases, you can use the &lOmni-Directional&r connectors.
info_book.integrateddynamics.manual.parts.other.connector_omni_directional.text3=These connectors will have a unique group id when first crafted, which identifies the group in which networks can be connected. Each connector group has a unique color of particles when placed in the world, the group id can be seen in the item tooltip or by right-clicking on the connector when placed. Additional connectors can be added to a group by crafting a new one using an existing connector within a group.
info_book.integrateddynamics.manual.parts.other.connector_omni_directional.text4=You can also change the group of existing connectors in two ways. Crafting one alone in a crafting table will assign it to a new group with no other members, and crafting two together will copy the first one's group to the second one.

info_book.integrateddynamics.manual.machines=Machines

info_book.integrateddynamics.manual.machines.materializer=Materializer
info_book.integrateddynamics.manual.machines.materializer.text1=In order to make a dynamic &lVariable Card&r static, a &lMaterializer&r can be used. The dynamic &lVariable Card&r must be inserted, and a new empty &lVariable Card&r must be inserted, which will cause it to contain the current value of the dynamic &lVariable Card&r as a static value.
info_book.integrateddynamics.manual.machines.materializer.text2=This can be useful in situations where you want to log the values of a certain dynamic &lVariable Card&r, or when you don’t need the dynamic evaluation of a &lVariable Card&r anymore.
info_book.integrateddynamics.manual.machines.materializer.text3=&lVariable Cards&r can be piped in and out the &lMaterializer&r.

info_book.integrateddynamics.manual.machines.proxy=Proxy
info_book.integrateddynamics.manual.machines.proxy.text1=A &lProxy&r can be used to make a dynamic reference to a certain &lVariable Card&r. It allows you to insert a &lVariable Card&r in the top slot, and write a new &lVariable Card&r, which will dynamically take the value of the &lVariable Card&r that is present in the proxy. Note that the referenced (or any other) &lVariable Card&r must remain in the top slot for the proxy to work.
info_book.integrateddynamics.manual.machines.proxy.text2=This is useful in situations where you have a chain of &lVariable Cards&r, but you still would like to be able to change one value manually. You could then proxy that variable, which will allow it to be swapped with another variable at any time.
info_book.integrateddynamics.manual.machines.proxy.text3=Just as with the &lMaterializer&r, &lVariable Cards&r can be piped in and out of it.

info_book.integrateddynamics.manual.machines.delay=Delay
info_book.integrateddynamics.manual.machines.delay.text1=In some situations, you might need to maintain some kind of history of variable values. When you for instance want to take the average or difference over the last values.
info_book.integrateddynamics.manual.machines.delay.text2=For this, you can use a &lDelay&r, with which you can maintain the history of the values of a given variable. You can do this by inserting a &lVariable Card&r in the top slot for which you want to maintain the history. You can now create now &lVariable Cards&r that will refer to a list of values, which corresponds to the history. The referenced (or any other) &lVariable Card&r must remain in the top slot for the delay to work.
info_book.integrateddynamics.manual.machines.delay.text3=The oldest values correspond to the last elements in the list. You can choose the maximum length of the history from within the gui.

info_book.integrateddynamics.manual.machines.energy_battery=Energy Battery
info_book.integrateddynamics.manual.machines.energy_battery.text1=&lIntegrated Dynamics&r networks can be configured to consume energy. For this, you can attach &lEnergy Batteries&r to the network to add energy storage capacity for it.
info_book.integrateddynamics.manual.machines.energy_battery.text2=These batteries accept both &lRF&r and &lTesla&r power.
info_book.integrateddynamics.manual.machines.energy_battery.text3=Applying a redstone signal will enable auto-export mode of energy to all sides.
info_book.integrateddynamics.manual.machines.energy_battery.text4=When this battery is held in your inventory, &lauto-supply&r mode can be enabled by shift+right clicking. When enabled, this battery will automatically try to fill the items you are holding in your two hands with energy.

info_book.integrateddynamics.manual.machines.generator=Generator
info_book.integrateddynamics.manual.machines.generator.text1=When you need &lRF&r or &lTesla&r energy, you can use the &lGenerator&r to create energy from &oburnable&r items.

info_book.integrateddynamics.manual.machines.mechanical_squeezer=Mechanical Squeezer
info_book.integrateddynamics.manual.machines.mechanical_squeezer.text1=There will come a time, when you will have had enough of all this jumping on &lSqueezers&r. If you haven't automated your &lSqueezers&r by then, perhaps it's time to look into making a &lMechanical Squeezers&r. It does not require any manual effort, but it requires energy to run. This also makes it significantly faster than the regular &lSqueezers&r and allows more things to be squeezed with a higher yield.

info_book.integrateddynamics.manual.machines.mechanical_drying_basin=Mechanical Drying Basin
info_book.integrateddynamics.manual.machines.mechanical_drying_basin.text1=Drying with the &lDrying Basin&r can take a while. If you want things to go faster, or if you want to be able to dry more things, you can use the &lMechanical Drying Basin&r, which requires energy to run.

info_book.integrateddynamics.manual.logic_programming=Logic Programming
info_book.integrateddynamics.manual.logic_programming.text1=Another method for creating dynamic variable cards, is by applying an &lOperator&r on one or more &lVariable Cards&r to produce a new &lVariable Card&r. An example of an &lOperator&r is the addition of two &lNumbers&r, resulting in a new &lNumber&r.
info_book.integrateddynamics.manual.logic_programming.text2=An &lOperator&r can have one or more input values, and has one output value. In most cases the input and outputs have a certain &lValue Type&r, otherwise, they will have the &lAny&r value type. An &lOperator&r with a single input and one output &lBoolean&r is called a &lPredicate&r.
info_book.integrateddynamics.manual.logic_programming.text3=The &lLogic Programmer&r contains a large collection of &lOperators&r. It also allows you to create static &lVariable Cards&r for all &lValue Types&r. After selecting an &lOperator&r, valid &lVariable Cards&r should be inserted in the expected input slots. Finally, another &lVariable Card&r should be inserted in the output slot. If the &lOperator&r is valid, a new dynamic variable will be written to the card. Remember that the referenced &lVariable Cards&r have to be present in a &lVariable Store&r in the same network where the &lOperator&r will be evaluated.
info_book.integrateddynamics.manual.logic_programming.text4=The &lLogic Programmer&r allows you to search through the list of &lOperators&r by name using the textbox on the top. It also allows you to filter on input or output value types, by inserting a &lVariable Card&r of those types in the bottom-left slots.
info_book.integrateddynamics.manual.logic_programming.text5=If a &lLabeller&r is present in the player’s inventory. The resulting &lVariable Card&r can be labelled immediately by clicking on the ‘E’ button next to the output slot.
info_book.integrateddynamics.manual.logic_programming.text6=The &lLogic Programmer&r exists both in block-form and item-form. Both can be interchanged by placing them in a crafting grid.
